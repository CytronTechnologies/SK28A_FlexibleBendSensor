

HI-TECH Software PIC LITE Macro Assembler V1.00 build 12136 
                                                                                               Sun Aug 05 14:29:12 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 12136
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 12136"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F876A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 17 "Main.c"
    43                           psect config,class=CONFIG,delta=2 ;# 
    44                           # 17 "Main.c"
    45  2007  3F32               dw 0x3F32 ;# 
    46                           	FNCALL	_main,_initialize
    47                           	FNCALL	_main,_LCD_putstr
    48                           	FNCALL	_main,_adc_on
    49                           	FNCALL	_main,_ui_adc_read
    50                           	FNCALL	_main,___lwdiv
    51                           	FNCALL	_main,___lwtoft
    52                           	FNCALL	_main,___ftmul
    53                           	FNCALL	_main,___fttol
    54                           	FNCALL	_main,___lwmod
    55                           	FNCALL	_main,_LCD_goto
    56                           	FNCALL	_main,_LCD_putchar
    57                           	FNCALL	_main,_adc_off
    58                           	FNCALL	_LCD_putstr,_LCD_senddata
    59                           	FNCALL	_LCD_putchar,_LCD_senddata
    60                           	FNCALL	_LCD_senddata,_LCD_4bitsend
    61                           	FNCALL	_LCD_goto,_LCD_command
    62                           	FNCALL	_initialize,_adc_initialize
    63                           	FNCALL	_initialize,_LCD_initialize
    64                           	FNCALL	_initialize,_LCD_clear
    65                           	FNCALL	_LCD_initialize,_LCD_command
    66                           	FNCALL	_LCD_clear,_LCD_command
    67                           	FNCALL	_LCD_command,_LCD_4bitsend
    68                           	FNCALL	___ftmul,___ftpack
    69                           	FNCALL	___lwtoft,___ftpack
    70                           	FNROOT	_main
    71                           	global	main@F1159
    72                           	global	_ADRESH
    73  001E                     _ADRESH	set	0x1E
    74                           	global	_ADCS0
    75  00FE                     _ADCS0	set	0xFE
    76                           	global	_ADCS1
    77  00FF                     _ADCS1	set	0xFF
    78                           	global	_ADON
    79  00F8                     _ADON	set	0xF8
    80                           	global	_CHS0
    81  00FB                     _CHS0	set	0xFB
    82                           	global	_CHS1
    83  00FC                     _CHS1	set	0xFC
    84                           	global	_CHS2
    85  00FD                     _CHS2	set	0xFD
    86                           	global	_GO
    87  00FA                     _GO	set	0xFA
    88                           	global	_RB2
    89  0032                     _RB2	set	0x32
    90                           	global	_RB3
    91  0033                     _RB3	set	0x33
    92                           	global	_RB4
    93  0034                     _RB4	set	0x34
    94                           	global	_RB5
    95  0035                     _RB5	set	0x35
    96                           	global	_RB6
    97  0036                     _RB6	set	0x36
    98                           	global	_RB7
    99  0037                     _RB7	set	0x37
   100                           	global	_ADRESL
   101  009E                     _ADRESL	set	0x9E
   102                           	global	_TRISB
   103  0086                     _TRISB	set	0x86
   104                           	global	_ADCS2
   105  04FE                     _ADCS2	set	0x4FE
   106                           	global	_ADFM
   107  04FF                     _ADFM	set	0x4FF
   108                           	global	_PCFG0
   109  04F8                     _PCFG0	set	0x4F8
   110                           	global	_PCFG1
   111  04F9                     _PCFG1	set	0x4F9
   112                           	global	_PCFG2
   113  04FA                     _PCFG2	set	0x4FA
   114                           	global	_PCFG3
   115  04FB                     _PCFG3	set	0x4FB
   116                           	global	_TRISA0
   117  0428                     _TRISA0	set	0x428
   118                           psect	strings,class=STRING,delta=2
   119                           global __pstrings
   120  0003                     __pstrings:
   121                           ;	global	stringdir,stringtab,__stringbase
   122  0003                     stringtab:
   123                           ;	String table - string pointers are 1 byte each
   124  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   125  0003  3000               movlw high(stringdir)
   126  0004  008A               movwf pclath
   127  0005  0804               movf fsr,w
   128  0006  0A84               incf fsr
   129  0007  0782               	addwf pc
   130  0008                     __stringbase:
   131  0008  3400               	retlw	0
   132                           psect	strings
   133                           	
   134  0009                     STR_1:	
   135  0009  3456               	retlw	86	;'V'
   136  000A  346F               	retlw	111	;'o'
   137  000B  346C               	retlw	108	;'l'
   138  000C  3474               	retlw	116	;'t'
   139  000D  3461               	retlw	97	;'a'
   140  000E  3467               	retlw	103	;'g'
   141  000F  3465               	retlw	101	;'e'
   142  0010  343A               	retlw	58	;':'
   143  0011  3400               	retlw	0
   144                           psect	strings
   145                           	file	"C:\Users\HATAKE~1\AppData\Local\Temp\s68c."
   146                           	line	#
   147                           psect cinit,class=CODE,delta=2
   148                           global start_initialization
   149  024A                     start_initialization:
   150                           
   151                           psect	bssBANK0,class=BANK0,space=1
   152                           global __pbssBANK0
   153  004A                     __pbssBANK0:
   154  004A                     main@F1159:
   155  004A                            ds      4
   156                           
   157                           ; Clear objects allocated to BANK0
   158                           psect cinit,class=CODE,delta=2,merge=1
   159  024A  01CA               	clrf	((__pbssBANK0)+0)&07Fh
   160  024B  01CB               	clrf	((__pbssBANK0)+1)&07Fh
   161  024C  01CC               	clrf	((__pbssBANK0)+2)&07Fh
   162  024D  01CD               	clrf	((__pbssBANK0)+3)&07Fh
   163                           psect cinit,class=CODE,delta=2,merge=1
   164                           global end_of_initialization
   165                           
   166                           ;End of C runtime variable initialization code
   167                           
   168  024E                     end_of_initialization:
   169  024E  0183               clrf status
   170  024F  120A  118A  2EDD   ljmp _main	;jump to C main() function
   171                           psect	cstackCOMMON,class=COMMON,space=1
   172                           global __pcstackCOMMON
   173  0070                     __pcstackCOMMON:
   174                           	global	?_LCD_4bitsend
   175  0070                     ?_LCD_4bitsend:	; 0 bytes @ 0x0
   176                           	global	??_LCD_4bitsend
   177  0070                     ??_LCD_4bitsend:	; 0 bytes @ 0x0
   178                           	global	?_initialize
   179  0070                     ?_initialize:	; 0 bytes @ 0x0
   180                           	global	?_adc_initialize
   181  0070                     ?_adc_initialize:	; 0 bytes @ 0x0
   182                           	global	??_adc_initialize
   183  0070                     ??_adc_initialize:	; 0 bytes @ 0x0
   184                           	global	?_adc_on
   185  0070                     ?_adc_on:	; 0 bytes @ 0x0
   186                           	global	??_adc_on
   187  0070                     ??_adc_on:	; 0 bytes @ 0x0
   188                           	global	?_adc_off
   189  0070                     ?_adc_off:	; 0 bytes @ 0x0
   190                           	global	??_adc_off
   191  0070                     ??_adc_off:	; 0 bytes @ 0x0
   192                           	global	?_LCD_command
   193  0070                     ?_LCD_command:	; 0 bytes @ 0x0
   194                           	global	?_LCD_initialize
   195  0070                     ?_LCD_initialize:	; 0 bytes @ 0x0
   196                           	global	?_LCD_senddata
   197  0070                     ?_LCD_senddata:	; 0 bytes @ 0x0
   198                           	global	?_LCD_putstr
   199  0070                     ?_LCD_putstr:	; 0 bytes @ 0x0
   200                           	global	?_LCD_putchar
   201  0070                     ?_LCD_putchar:	; 0 bytes @ 0x0
   202                           	global	?_LCD_clear
   203  0070                     ?_LCD_clear:	; 0 bytes @ 0x0
   204                           	global	?_main
   205  0070                     ?_main:	; 0 bytes @ 0x0
   206                           	global	?_ui_adc_read
   207  0070                     ?_ui_adc_read:	; 2 bytes @ 0x0
   208                           	global	?___lwdiv
   209  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   210                           	global	?___lwmod
   211  0070                     ?___lwmod:	; 2 bytes @ 0x0
   212                           	global	?___ftpack
   213  0070                     ?___ftpack:	; 3 bytes @ 0x0
   214                           	global	___lwdiv@divisor
   215  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   216                           	global	___lwmod@divisor
   217  0070                     ___lwmod@divisor:	; 2 bytes @ 0x0
   218                           	global	___ftpack@arg
   219  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   220  0070                     	ds	1
   221                           	global	LCD_4bitsend@data
   222  0071                     LCD_4bitsend@data:	; 1 bytes @ 0x1
   223  0071                     	ds	1
   224                           	global	??_ui_adc_read
   225  0072                     ??_ui_adc_read:	; 0 bytes @ 0x2
   226                           	global	??_LCD_command
   227  0072                     ??_LCD_command:	; 0 bytes @ 0x2
   228                           	global	??_LCD_senddata
   229  0072                     ??_LCD_senddata:	; 0 bytes @ 0x2
   230                           	global	LCD_command@var
   231  0072                     LCD_command@var:	; 1 bytes @ 0x2
   232                           	global	LCD_senddata@var
   233  0072                     LCD_senddata@var:	; 1 bytes @ 0x2
   234                           	global	___lwdiv@dividend
   235  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   236                           	global	___lwmod@dividend
   237  0072                     ___lwmod@dividend:	; 2 bytes @ 0x2
   238  0072                     	ds	1
   239                           	global	??_LCD_initialize
   240  0073                     ??_LCD_initialize:	; 0 bytes @ 0x3
   241                           	global	??_LCD_putstr
   242  0073                     ??_LCD_putstr:	; 0 bytes @ 0x3
   243                           	global	??_LCD_putchar
   244  0073                     ??_LCD_putchar:	; 0 bytes @ 0x3
   245                           	global	??_LCD_clear
   246  0073                     ??_LCD_clear:	; 0 bytes @ 0x3
   247                           	global	?_LCD_goto
   248  0073                     ?_LCD_goto:	; 0 bytes @ 0x3
   249                           	global	LCD_putchar@c_data
   250  0073                     LCD_putchar@c_data:	; 1 bytes @ 0x3
   251                           	global	LCD_goto@column
   252  0073                     LCD_goto@column:	; 1 bytes @ 0x3
   253                           	global	___ftpack@exp
   254  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   255  0073                     	ds	1
   256                           	global	??_LCD_goto
   257  0074                     ??_LCD_goto:	; 0 bytes @ 0x4
   258                           	global	??___lwdiv
   259  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   260                           	global	??___lwmod
   261  0074                     ??___lwmod:	; 0 bytes @ 0x4
   262                           	global	LCD_putstr@csz_string
   263  0074                     LCD_putstr@csz_string:	; 1 bytes @ 0x4
   264                           	global	LCD_goto@row
   265  0074                     LCD_goto@row:	; 1 bytes @ 0x4
   266                           	global	___ftpack@sign
   267  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   268                           	global	ui_adc_read@ohm
   269  0074                     ui_adc_read@ohm:	; 2 bytes @ 0x4
   270  0074                     	ds	1
   271                           	global	??_initialize
   272  0075                     ??_initialize:	; 0 bytes @ 0x5
   273                           	global	??___ftpack
   274  0075                     ??___ftpack:	; 0 bytes @ 0x5
   275                           	global	___lwmod@counter
   276  0075                     ___lwmod@counter:	; 1 bytes @ 0x5
   277                           	global	___lwdiv@quotient
   278  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   279  0075                     	ds	2
   280                           	global	___lwdiv@counter
   281  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   282  0077                     	ds	1
   283                           	global	?___fttol
   284  0078                     ?___fttol:	; 4 bytes @ 0x8
   285                           	global	___fttol@f1
   286  0078                     ___fttol@f1:	; 3 bytes @ 0x8
   287  0078                     	ds	4
   288                           	global	??___lwtoft
   289  007C                     ??___lwtoft:	; 0 bytes @ 0xC
   290  007C                     	ds	1
   291                           	global	??_main
   292  007D                     ??_main:	; 0 bytes @ 0xD
   293  007D                     	ds	1
   294                           psect	cstackBANK0,class=BANK0,space=1
   295                           global __pcstackBANK0
   296  0020                     __pcstackBANK0:
   297                           	global	??___fttol
   298  0020                     ??___fttol:	; 0 bytes @ 0x0
   299  0020                     	ds	4
   300                           	global	___fttol@sign1
   301  0024                     ___fttol@sign1:	; 1 bytes @ 0x4
   302  0024                     	ds	1
   303                           	global	___fttol@lval
   304  0025                     ___fttol@lval:	; 4 bytes @ 0x5
   305  0025                     	ds	4
   306                           	global	___fttol@exp1
   307  0029                     ___fttol@exp1:	; 1 bytes @ 0x9
   308  0029                     	ds	1
   309                           	global	?___lwtoft
   310  002A                     ?___lwtoft:	; 3 bytes @ 0xA
   311                           	global	___lwtoft@c
   312  002A                     ___lwtoft@c:	; 2 bytes @ 0xA
   313  002A                     	ds	3
   314                           	global	?___ftmul
   315  002D                     ?___ftmul:	; 3 bytes @ 0xD
   316                           	global	___ftmul@f1
   317  002D                     ___ftmul@f1:	; 3 bytes @ 0xD
   318  002D                     	ds	3
   319                           	global	___ftmul@f2
   320  0030                     ___ftmul@f2:	; 3 bytes @ 0x10
   321  0030                     	ds	3
   322                           	global	??___ftmul
   323  0033                     ??___ftmul:	; 0 bytes @ 0x13
   324  0033                     	ds	4
   325                           	global	___ftmul@exp
   326  0037                     ___ftmul@exp:	; 1 bytes @ 0x17
   327  0037                     	ds	1
   328                           	global	___ftmul@f3_as_product
   329  0038                     ___ftmul@f3_as_product:	; 3 bytes @ 0x18
   330  0038                     	ds	3
   331                           	global	___ftmul@cntr
   332  003B                     ___ftmul@cntr:	; 1 bytes @ 0x1B
   333  003B                     	ds	1
   334                           	global	___ftmul@sign
   335  003C                     ___ftmul@sign:	; 1 bytes @ 0x1C
   336  003C                     	ds	1
   337                           	global	main@value_
   338  003D                     main@value_:	; 4 bytes @ 0x1D
   339  003D                     	ds	4
   340                           	global	main@remainder
   341  0041                     main@remainder:	; 1 bytes @ 0x21
   342  0041                     	ds	1
   343                           	global	main@i
   344  0042                     main@i:	; 2 bytes @ 0x22
   345  0042                     	ds	2
   346                           	global	main@voltage
   347  0044                     main@voltage:	; 2 bytes @ 0x24
   348  0044                     	ds	2
   349                           	global	main@j
   350  0046                     main@j:	; 2 bytes @ 0x26
   351  0046                     	ds	2
   352                           	global	main@total
   353  0048                     main@total:	; 2 bytes @ 0x28
   354  0048                     	ds	2
   355                           ;!
   356                           ;!Data Sizes:
   357                           ;!    Strings     9
   358                           ;!    Constant    0
   359                           ;!    Data        0
   360                           ;!    BSS         4
   361                           ;!    Persistent  0
   362                           ;!    Stack       0
   363                           ;!
   364                           ;!Auto Spaces:
   365                           ;!    Space          Size  Autos    Used
   366                           ;!    COMMON           14     14      14
   367                           ;!    BANK0            80     42      46
   368                           ;!    BANK1            80      0       0
   369                           ;!    BANK3            96      0       0
   370                           ;!    BANK2            96      0       0
   371                           
   372                           ;!
   373                           ;!Pointer List with Targets:
   374                           ;!
   375                           ;!    ?___ftpack	float  size(1) Largest target is 0
   376                           ;!
   377                           ;!    ?___fttol	long  size(1) Largest target is 0
   378                           ;!
   379                           ;!    ?___lwmod	unsigned int  size(1) Largest target is 0
   380                           ;!
   381                           ;!    ?___ftmul	float  size(1) Largest target is 0
   382                           ;!
   383                           ;!    ?___lwtoft	float  size(1) Largest target is 0
   384                           ;!
   385                           ;!    ?___lwdiv	unsigned int  size(1) Largest target is 0
   386                           ;!
   387                           ;!    ?_ui_adc_read	unsigned int  size(1) Largest target is 0
   388                           ;!
   389                           ;!    LCD_putstr@csz_string	PTR unsigned char  size(1) Largest target is 9
   390                           ;!		 -> STR_1(CODE[9]), 
   391                           ;!
   392                           
   393                           
   394                           ;!
   395                           ;!Critical Paths under _main in COMMON
   396                           ;!
   397                           ;!    _main->___lwtoft
   398                           ;!    _LCD_putstr->_LCD_senddata
   399                           ;!    _LCD_putchar->_LCD_senddata
   400                           ;!    _LCD_senddata->_LCD_4bitsend
   401                           ;!    _LCD_goto->_LCD_command
   402                           ;!    _initialize->_LCD_initialize
   403                           ;!    _LCD_initialize->_LCD_command
   404                           ;!    _LCD_clear->_LCD_command
   405                           ;!    _LCD_command->_LCD_4bitsend
   406                           ;!    ___ftmul->___lwtoft
   407                           ;!    ___fttol->___ftpack
   408                           ;!    ___lwtoft->___fttol
   409                           ;!
   410                           ;!Critical Paths under _main in BANK0
   411                           ;!
   412                           ;!    _main->___ftmul
   413                           ;!    ___ftmul->___lwtoft
   414                           ;!    ___lwtoft->___fttol
   415                           ;!
   416                           ;!Critical Paths under _main in BANK1
   417                           ;!
   418                           ;!    None.
   419                           ;!
   420                           ;!Critical Paths under _main in BANK3
   421                           ;!
   422                           ;!    None.
   423                           ;!
   424                           ;!Critical Paths under _main in BANK2
   425                           ;!
   426                           ;!    None.
   427                           
   428 ;;
   429 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   430 ;;
   431                           
   432                           ;!
   433                           ;!Call Graph Tables:
   434                           ;!
   435                           ;! ---------------------------------------------------------------------------------
   436                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   437                           ;! ---------------------------------------------------------------------------------
   438                           ;! (0) _main                                                14    14      0    2856
   439                           ;!                                             13 COMMON     1     1      0
   440                           ;!                                             29 BANK0     13    13      0
   441                           ;!                         _initialize
   442                           ;!                         _LCD_putstr
   443                           ;!                             _adc_on
   444                           ;!                        _ui_adc_read
   445                           ;!                            ___lwdiv
   446                           ;!                           ___lwtoft
   447                           ;!                            ___ftmul
   448                           ;!                            ___fttol
   449                           ;!                            ___lwmod
   450                           ;!                           _LCD_goto
   451                           ;!                        _LCD_putchar
   452                           ;!                            _adc_off
   453                           ;! ---------------------------------------------------------------------------------
   454                           ;! (1) _adc_on                                               0     0      0       0
   455                           ;! ---------------------------------------------------------------------------------
   456                           ;! (1) _adc_off                                              0     0      0       0
   457                           ;! ---------------------------------------------------------------------------------
   458                           ;! (1) _ui_adc_read                                          6     4      2      47
   459                           ;!                                              0 COMMON     6     4      2
   460                           ;! ---------------------------------------------------------------------------------
   461                           ;! (1) _LCD_putstr                                           2     2      0     243
   462                           ;!                                              3 COMMON     2     2      0
   463                           ;!                       _LCD_senddata
   464                           ;! ---------------------------------------------------------------------------------
   465                           ;! (1) _LCD_putchar                                          1     1      0     220
   466                           ;!                                              3 COMMON     1     1      0
   467                           ;!                       _LCD_senddata
   468                           ;! ---------------------------------------------------------------------------------
   469                           ;! (2) _LCD_senddata                                         1     1      0     198
   470                           ;!                                              2 COMMON     1     1      0
   471                           ;!                       _LCD_4bitsend
   472                           ;! ---------------------------------------------------------------------------------
   473                           ;! (1) _LCD_goto                                             2     1      1     264
   474                           ;!                                              3 COMMON     2     1      1
   475                           ;!                        _LCD_command
   476                           ;! ---------------------------------------------------------------------------------
   477                           ;! (1) _initialize                                           2     2      0     396
   478                           ;!                                              5 COMMON     2     2      0
   479                           ;!                     _adc_initialize
   480                           ;!                     _LCD_initialize
   481                           ;!                          _LCD_clear
   482                           ;! ---------------------------------------------------------------------------------
   483                           ;! (2) _adc_initialize                                       0     0      0       0
   484                           ;! ---------------------------------------------------------------------------------
   485                           ;! (2) _LCD_initialize                                       2     2      0     198
   486                           ;!                                              3 COMMON     2     2      0
   487                           ;!                        _LCD_command
   488                           ;! ---------------------------------------------------------------------------------
   489                           ;! (2) _LCD_clear                                            0     0      0     198
   490                           ;!                        _LCD_command
   491                           ;! ---------------------------------------------------------------------------------
   492                           ;! (2) _LCD_command                                          1     1      0     198
   493                           ;!                                              2 COMMON     1     1      0
   494                           ;!                       _LCD_4bitsend
   495                           ;! ---------------------------------------------------------------------------------
   496                           ;! (3) _LCD_4bitsend                                         2     2      0     176
   497                           ;!                                              0 COMMON     2     2      0
   498                           ;! ---------------------------------------------------------------------------------
   499                           ;! (1) ___lwdiv                                              8     4      4     162
   500                           ;!                                              0 COMMON     8     4      4
   501                           ;! ---------------------------------------------------------------------------------
   502                           ;! (1) ___lwmod                                              6     2      4     159
   503                           ;!                                              0 COMMON     6     2      4
   504                           ;! ---------------------------------------------------------------------------------
   505                           ;! (1) ___ftmul                                             16    10      6     535
   506                           ;!                                             13 BANK0     16    10      6
   507                           ;!                           ___ftpack
   508                           ;!                           ___lwtoft (ARG)
   509                           ;!                            ___fttol (ARG)
   510                           ;! ---------------------------------------------------------------------------------
   511                           ;! (1) ___fttol                                             14    10      4     252
   512                           ;!                                              8 COMMON     4     0      4
   513                           ;!                                              0 BANK0     10    10      0
   514                           ;!                           ___ftpack (ARG)
   515                           ;! ---------------------------------------------------------------------------------
   516                           ;! (1) ___lwtoft                                             4     1      3     231
   517                           ;!                                             12 COMMON     1     1      0
   518                           ;!                                             10 BANK0      3     0      3
   519                           ;!                           ___ftpack
   520                           ;!                            ___fttol (ARG)
   521                           ;! ---------------------------------------------------------------------------------
   522                           ;! (2) ___ftpack                                             8     3      5     209
   523                           ;!                                              0 COMMON     8     3      5
   524                           ;! ---------------------------------------------------------------------------------
   525                           ;! Estimated maximum stack depth 3
   526                           ;! ---------------------------------------------------------------------------------
   527                           ;!
   528                           ;! Call Graph Graphs:
   529                           ;!
   530                           ;! _main (ROOT)
   531                           ;!   _initialize
   532                           ;!     _adc_initialize
   533                           ;!     _LCD_initialize
   534                           ;!       _LCD_command
   535                           ;!         _LCD_4bitsend
   536                           ;!     _LCD_clear
   537                           ;!       _LCD_command
   538                           ;!         _LCD_4bitsend
   539                           ;!   _LCD_putstr
   540                           ;!     _LCD_senddata
   541                           ;!       _LCD_4bitsend
   542                           ;!   _adc_on
   543                           ;!   _ui_adc_read
   544                           ;!   ___lwdiv
   545                           ;!   ___lwtoft
   546                           ;!     ___ftpack
   547                           ;!     ___fttol (ARG)
   548                           ;!       ___ftpack (ARG)
   549                           ;!   ___ftmul
   550                           ;!     ___ftpack
   551                           ;!     ___lwtoft (ARG)
   552                           ;!       ___ftpack
   553                           ;!       ___fttol (ARG)
   554                           ;!         ___ftpack (ARG)
   555                           ;!     ___fttol (ARG)
   556                           ;!       ___ftpack (ARG)
   557                           ;!   ___fttol
   558                           ;!     ___ftpack (ARG)
   559                           ;!   ___lwmod
   560                           ;!   _LCD_goto
   561                           ;!     _LCD_command
   562                           ;!       _LCD_4bitsend
   563                           ;!   _LCD_putchar
   564                           ;!     _LCD_senddata
   565                           ;!       _LCD_4bitsend
   566                           ;!   _adc_off
   567                           ;!
   568                           
   569                           ;! Address spaces:
   570                           
   571                           ;!Name               Size   Autos  Total    Cost      Usage
   572                           ;!BITCOMMON            E      0       0       0        0.0%
   573                           ;!EEDATA             100      0       0       0        0.0%
   574                           ;!NULL                 0      0       0       0        0.0%
   575                           ;!CODE                 0      0       0       0        0.0%
   576                           ;!COMMON               E      E       E       1      100.0%
   577                           ;!BITSFR0              0      0       0       1        0.0%
   578                           ;!SFR0                 0      0       0       1        0.0%
   579                           ;!BITSFR1              0      0       0       2        0.0%
   580                           ;!SFR1                 0      0       0       2        0.0%
   581                           ;!STACK                0      0       4       2        0.0%
   582                           ;!ABS                  0      0      3C       3        0.0%
   583                           ;!BITBANK0            50      0       0       4        0.0%
   584                           ;!BITSFR3              0      0       0       4        0.0%
   585                           ;!SFR3                 0      0       0       4        0.0%
   586                           ;!BANK0               50     2A      2E       5       57.5%
   587                           ;!BITSFR2              0      0       0       5        0.0%
   588                           ;!SFR2                 0      0       0       5        0.0%
   589                           ;!BITBANK1            50      0       0       6        0.0%
   590                           ;!BANK1               50      0       0       7        0.0%
   591                           ;!BITBANK3            60      0       0       8        0.0%
   592                           ;!BANK3               60      0       0       9        0.0%
   593                           ;!BITBANK2            60      0       0      10        0.0%
   594                           ;!BANK2               60      0       0      11        0.0%
   595                           ;!DATA                 0      0      40      12        0.0%
   596                           
   597                           	global	_main
   598                           
   599 ;; *************** function _main *****************
   600 ;; Defined at:
   601 ;;		line 25 in file "Main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  j               2   38[BANK0 ] unsigned int 
   606 ;;  value_          4   29[BANK0 ] unsigned char [4]
   607 ;;  remainder       1   33[BANK0 ] unsigned char 
   608 ;;  total           2   40[BANK0 ] unsigned int 
   609 ;;  voltage         2   36[BANK0 ] unsigned int 
   610 ;;  i               2   34[BANK0 ] unsigned int 
   611 ;; Return value:  Size  Location     Type
   612 ;;		None               void
   613 ;; Registers used:
   614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 17F/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         0       0       0       0       0
   621 ;;      Locals:         0      13       0       0       0
   622 ;;      Temps:          1       0       0       0       0
   623 ;;      Totals:         1      13       0       0       0
   624 ;;Total ram usage:       14 bytes
   625 ;; Hardware stack levels required when called:    4
   626 ;; This function calls:
   627 ;;		_initialize
   628 ;;		_LCD_putstr
   629 ;;		_adc_on
   630 ;;		_ui_adc_read
   631 ;;		___lwdiv
   632 ;;		___lwtoft
   633 ;;		___ftmul
   634 ;;		___fttol
   635 ;;		___lwmod
   636 ;;		_LCD_goto
   637 ;;		_LCD_putchar
   638 ;;		_adc_off
   639 ;; This function is called by:
   640 ;;		Startup code after reset
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           psect	maintext,global,class=CODE,delta=2,split=1
   644                           global __pmaintext
   645  06DD                     __pmaintext:
   646                           psect	maintext
   647                           	file	"Main.c"
   648                           	line	25
   649                           	global	__size_of_main
   650  0123                     	__size_of_main	equ	__end_of_main-_main
   651                           	
   652  06DD                     _main:	
   653                           	opt	stack 4
   654                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   655                           	line	30
   656                           	
   657  06DD                     l1383:	
   658                           ;Main.c: 26: unsigned int total;
   659                           ;Main.c: 27: unsigned int i;
   660                           ;Main.c: 28: unsigned int voltage;
   661                           ;Main.c: 30: TRISA0 = 1;
   662  06DD  1683               	bsf	status, 5	;RP0=1, select bank1
   663  06DE  1303               	bcf	status, 6	;RP1=0, select bank1
   664  06DF  1405               	bsf	(1064/8)^080h,(1064)&7	;volatile
   665                           	line	31
   666                           	
   667  06E0                     l1385:	
   668                           ;Main.c: 31: TRISB = 0b00000001;
   669  06E0  3001               	movlw	(01h)
   670  06E1  0086               	movwf	(134)^080h	;volatile
   671                           	line	32
   672                           	
   673  06E2                     l1387:	
   674                           ;Main.c: 32: initialize();
   675  06E2  120A  118A  2291   	fcall	_initialize
              120A  118A         
   676                           	line	35
   677                           	
   678  06E7                     l1389:	
   679                           ;Main.c: 35: LCD_putstr("Voltage:");
   680  06E7  3001               	movlw	((STR_1-__stringbase))&0ffh
   681  06E8  120A  118A  22C4   	fcall	_LCD_putstr
              120A  118A         
   682                           	line	36
   683                           	
   684  06ED                     l1391:	
   685                           ;Main.c: 36: adc_on();
   686  06ED  120A  118A  2237   	fcall	_adc_on
              120A  118A         
   687                           	line	37
   688                           	
   689  06F2                     l1393:	
   690                           ;Main.c: 37: _delay((unsigned long)((1)*(2e6/4000.0)));
   691                           	opt asmopt_off
   692  06F2  30A6               movlw	166
   693  06F3  00FD               movwf	(??_main+0)+0,f
   694  06F4                     u1577:
   695  06F4  0BFD               decfsz	(??_main+0)+0,f
   696  06F5  2EF4               	goto	u1577
   697  06F6  0000               	nop
   698                           opt asmopt_on
   699                           
   700  06F7  2EF8               	goto	l1395
   701                           	line	39
   702                           ;Main.c: 39: while(1)
   703                           	
   704  06F8                     l121:	
   705                           	line	41
   706                           	
   707  06F8                     l1395:	
   708                           ;Main.c: 40: {
   709                           ;Main.c: 41: total = 0;
   710  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
   711  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
   712  06FA  01C8               	clrf	(main@total)
   713  06FB  01C9               	clrf	(main@total+1)
   714                           	line	42
   715                           	
   716  06FC                     l1397:	
   717                           ;Main.c: 42: for (i = 0; i<10; i++)
   718  06FC  01C2               	clrf	(main@i)
   719  06FD  01C3               	clrf	(main@i+1)
   720                           	
   721  06FE                     l1399:	
   722  06FE  3000               	movlw	high(0Ah)
   723  06FF  0243               	subwf	(main@i+1),w
   724  0700  300A               	movlw	low(0Ah)
   725  0701  1903               	skipnz
   726  0702  0242               	subwf	(main@i),w
   727  0703  1C03               	skipc
   728  0704  2F06               	goto	u1531
   729  0705  2F07               	goto	u1530
   730  0706                     u1531:
   731  0706  2F09               	goto	l1403
   732  0707                     u1530:
   733  0707  2F28               	goto	l1409
   734                           	
   735  0708                     l1401:	
   736  0708  2F28               	goto	l1409
   737                           	line	43
   738                           	
   739  0709                     l122:	
   740                           	line	44
   741                           	
   742  0709                     l1403:	
   743                           ;Main.c: 43: {
   744                           ;Main.c: 44: total = (total + ui_adc_read());
   745  0709  120A  118A  22E5   	fcall	_ui_adc_read
              120A  118A         
   746  070E  1283               	bcf	status, 5	;RP0=0, select bank0
   747  070F  1303               	bcf	status, 6	;RP1=0, select bank0
   748  0710  0848               	movf	(main@total),w
   749  0711  0770               	addwf	(0+(?_ui_adc_read)),w
   750  0712  00C8               	movwf	(main@total)
   751  0713  0849               	movf	(main@total+1),w
   752  0714  1803               	skipnc
   753  0715  0A49               	incf	(main@total+1),w
   754  0716  0771               	addwf	(1+(?_ui_adc_read)),w
   755  0717  00C9               	movwf	1+(main@total)
   756                           	line	42
   757                           	
   758  0718                     l1405:	
   759  0718  3001               	movlw	low(01h)
   760  0719  07C2               	addwf	(main@i),f
   761  071A  1803               	skipnc
   762  071B  0AC3               	incf	(main@i+1),f
   763  071C  3000               	movlw	high(01h)
   764  071D  07C3               	addwf	(main@i+1),f
   765                           	
   766  071E                     l1407:	
   767  071E  3000               	movlw	high(0Ah)
   768  071F  0243               	subwf	(main@i+1),w
   769  0720  300A               	movlw	low(0Ah)
   770  0721  1903               	skipnz
   771  0722  0242               	subwf	(main@i),w
   772  0723  1C03               	skipc
   773  0724  2F26               	goto	u1541
   774  0725  2F27               	goto	u1540
   775  0726                     u1541:
   776  0726  2F09               	goto	l1403
   777  0727                     u1540:
   778  0727  2F28               	goto	l1409
   779                           	
   780  0728                     l123:	
   781                           	line	46
   782                           	
   783  0728                     l1409:	
   784                           ;Main.c: 45: }
   785                           ;Main.c: 46: total = total/10;
   786  0728  300A               	movlw	low(0Ah)
   787  0729  00F0               	movwf	(?___lwdiv)
   788  072A  3000               	movlw	high(0Ah)
   789  072B  00F1               	movwf	((?___lwdiv))+1
   790  072C  0849               	movf	(main@total+1),w
   791  072D  01F3               	clrf	1+(?___lwdiv)+02h
   792  072E  07F3               	addwf	1+(?___lwdiv)+02h
   793  072F  0848               	movf	(main@total),w
   794  0730  01F2               	clrf	0+(?___lwdiv)+02h
   795  0731  07F2               	addwf	0+(?___lwdiv)+02h
   796                           
   797  0732  120A  118A  2359   	fcall	___lwdiv
              120A  118A         
   798  0737  0871               	movf	(1+(?___lwdiv)),w
   799  0738  1283               	bcf	status, 5	;RP0=0, select bank0
   800  0739  1303               	bcf	status, 6	;RP1=0, select bank0
   801  073A  01C9               	clrf	(main@total+1)
   802  073B  07C9               	addwf	(main@total+1)
   803  073C  0870               	movf	(0+(?___lwdiv)),w
   804  073D  01C8               	clrf	(main@total)
   805  073E  07C8               	addwf	(main@total)
   806                           
   807                           	line	47
   808                           ;Main.c: 47: voltage =(float)(total *(5.0/1024)*1000);
   809  073F  0849               	movf	(main@total+1),w
   810  0740  01AB               	clrf	(?___lwtoft+1)
   811  0741  07AB               	addwf	(?___lwtoft+1)
   812  0742  0848               	movf	(main@total),w
   813  0743  01AA               	clrf	(?___lwtoft)
   814  0744  07AA               	addwf	(?___lwtoft)
   815                           
   816  0745  120A  118A  22A9   	fcall	___lwtoft
              120A  118A         
   817  074A  1283               	bcf	status, 5	;RP0=0, select bank0
   818  074B  1303               	bcf	status, 6	;RP1=0, select bank0
   819  074C  082A               	movf	(0+(?___lwtoft)),w
   820  074D  00B0               	movwf	0+(?___ftmul)+03h
   821  074E  082B               	movf	(1+(?___lwtoft)),w
   822  074F  00B1               	movwf	1+(?___ftmul)+03h
   823  0750  082C               	movf	(2+(?___lwtoft)),w
   824  0751  00B2               	movwf	2+(?___ftmul)+03h
   825  0752  3040               	movlw	0x40
   826  0753  00AD               	movwf	(?___ftmul)
   827  0754  309C               	movlw	0x9c
   828  0755  00AE               	movwf	(?___ftmul+1)
   829  0756  3040               	movlw	0x40
   830  0757  00AF               	movwf	(?___ftmul+2)
   831  0758  120A  118A  25EF   	fcall	___ftmul
              120A  118A         
   832  075D  1283               	bcf	status, 5	;RP0=0, select bank0
   833  075E  1303               	bcf	status, 6	;RP1=0, select bank0
   834  075F  082D               	movf	(0+(?___ftmul)),w
   835  0760  00F8               	movwf	(?___fttol)
   836  0761  082E               	movf	(1+(?___ftmul)),w
   837  0762  00F9               	movwf	(?___fttol+1)
   838  0763  082F               	movf	(2+(?___ftmul)),w
   839  0764  00FA               	movwf	(?___fttol+2)
   840  0765  120A  118A  2549   	fcall	___fttol
              120A  118A         
   841  076A  0879               	movf	1+(((0+(?___fttol)))),w
   842  076B  1283               	bcf	status, 5	;RP0=0, select bank0
   843  076C  1303               	bcf	status, 6	;RP1=0, select bank0
   844  076D  01C5               	clrf	(main@voltage+1)
   845  076E  07C5               	addwf	(main@voltage+1)
   846  076F  0878               	movf	0+(((0+(?___fttol)))),w
   847  0770  01C4               	clrf	(main@voltage)
   848  0771  07C4               	addwf	(main@voltage)
   849                           
   850                           	line	49
   851                           	
   852  0772                     l1411:	
   853                           ;Main.c: 49: unsigned char value_[4] = {0};
   854  0772  084D               	movf	(main@F1159+3),w
   855  0773  00C0               	movwf	(main@value_+3)
   856  0774  084C               	movf	(main@F1159+2),w
   857  0775  00BF               	movwf	(main@value_+2)
   858  0776  084B               	movf	(main@F1159+1),w
   859  0777  00BE               	movwf	(main@value_+1)
   860  0778  084A               	movf	(main@F1159),w
   861  0779  00BD               	movwf	(main@value_)
   862                           
   863                           	line	50
   864                           	
   865  077A                     l1413:	
   866                           ;Main.c: 50: unsigned char remainder = 0;
   867  077A  01C1               	clrf	(main@remainder)
   868                           	line	51
   869                           	
   870  077B                     l1415:	
   871                           ;Main.c: 51: for(unsigned int j = 0; j < 4; j++)
   872  077B  01C6               	clrf	(main@j)
   873  077C  01C7               	clrf	(main@j+1)
   874                           	
   875  077D                     l1417:	
   876  077D  3000               	movlw	high(04h)
   877  077E  0247               	subwf	(main@j+1),w
   878  077F  3004               	movlw	low(04h)
   879  0780  1903               	skipnz
   880  0781  0246               	subwf	(main@j),w
   881  0782  1C03               	skipc
   882  0783  2F85               	goto	u1551
   883  0784  2F86               	goto	u1550
   884  0785                     u1551:
   885  0785  2F88               	goto	l1421
   886  0786                     u1550:
   887  0786  2FCD               	goto	l1429
   888                           	
   889  0787                     l1419:	
   890  0787  2FCD               	goto	l1429
   891                           	line	52
   892                           	
   893  0788                     l126:	
   894                           	line	53
   895                           	
   896  0788                     l1421:	
   897                           ;Main.c: 52: {
   898                           ;Main.c: 53: remainder = voltage%10;
   899  0788  300A               	movlw	low(0Ah)
   900  0789  00F0               	movwf	(?___lwmod)
   901  078A  3000               	movlw	high(0Ah)
   902  078B  00F1               	movwf	((?___lwmod))+1
   903  078C  0845               	movf	(main@voltage+1),w
   904  078D  01F3               	clrf	1+(?___lwmod)+02h
   905  078E  07F3               	addwf	1+(?___lwmod)+02h
   906  078F  0844               	movf	(main@voltage),w
   907  0790  01F2               	clrf	0+(?___lwmod)+02h
   908  0791  07F2               	addwf	0+(?___lwmod)+02h
   909                           
   910  0792  120A  118A  2315   	fcall	___lwmod
              120A  118A         
   911  0797  0870               	movf	(0+(?___lwmod)),w
   912  0798  00FD               	movwf	(??_main+0)+0
   913  0799  087D               	movf	(??_main+0)+0,w
   914  079A  1283               	bcf	status, 5	;RP0=0, select bank0
   915  079B  1303               	bcf	status, 6	;RP1=0, select bank0
   916  079C  00C1               	movwf	(main@remainder)
   917                           	line	54
   918                           ;Main.c: 54: voltage = voltage/10;
   919  079D  300A               	movlw	low(0Ah)
   920  079E  00F0               	movwf	(?___lwdiv)
   921  079F  3000               	movlw	high(0Ah)
   922  07A0  00F1               	movwf	((?___lwdiv))+1
   923  07A1  0845               	movf	(main@voltage+1),w
   924  07A2  01F3               	clrf	1+(?___lwdiv)+02h
   925  07A3  07F3               	addwf	1+(?___lwdiv)+02h
   926  07A4  0844               	movf	(main@voltage),w
   927  07A5  01F2               	clrf	0+(?___lwdiv)+02h
   928  07A6  07F2               	addwf	0+(?___lwdiv)+02h
   929                           
   930  07A7  120A  118A  2359   	fcall	___lwdiv
              120A  118A         
   931  07AC  0871               	movf	(1+(?___lwdiv)),w
   932  07AD  1283               	bcf	status, 5	;RP0=0, select bank0
   933  07AE  1303               	bcf	status, 6	;RP1=0, select bank0
   934  07AF  01C5               	clrf	(main@voltage+1)
   935  07B0  07C5               	addwf	(main@voltage+1)
   936  07B1  0870               	movf	(0+(?___lwdiv)),w
   937  07B2  01C4               	clrf	(main@voltage)
   938  07B3  07C4               	addwf	(main@voltage)
   939                           
   940                           	line	55
   941                           	
   942  07B4                     l1423:	
   943                           ;Main.c: 55: value_[j] = remainder + 0x30;
   944  07B4  0841               	movf	(main@remainder),w
   945  07B5  3E30               	addlw	030h
   946  07B6  00FD               	movwf	(??_main+0)+0
   947  07B7  0846               	movf	(main@j),w
   948  07B8  3E3D               	addlw	main@value_&0ffh
   949  07B9  0084               	movwf	fsr0
   950  07BA  087D               	movf	(??_main+0)+0,w
   951  07BB  1383               	bcf	status, 7	;select IRP bank0
   952  07BC  0080               	movwf	indf
   953                           	line	51
   954                           	
   955  07BD                     l1425:	
   956  07BD  3001               	movlw	low(01h)
   957  07BE  07C6               	addwf	(main@j),f
   958  07BF  1803               	skipnc
   959  07C0  0AC7               	incf	(main@j+1),f
   960  07C1  3000               	movlw	high(01h)
   961  07C2  07C7               	addwf	(main@j+1),f
   962                           	
   963  07C3                     l1427:	
   964  07C3  3000               	movlw	high(04h)
   965  07C4  0247               	subwf	(main@j+1),w
   966  07C5  3004               	movlw	low(04h)
   967  07C6  1903               	skipnz
   968  07C7  0246               	subwf	(main@j),w
   969  07C8  1C03               	skipc
   970  07C9  2FCB               	goto	u1561
   971  07CA  2FCC               	goto	u1560
   972  07CB                     u1561:
   973  07CB  2F88               	goto	l1421
   974  07CC                     u1560:
   975  07CC  2FCD               	goto	l1429
   976                           	
   977  07CD                     l127:	
   978                           	line	58
   979                           	
   980  07CD                     l1429:	
   981                           ;Main.c: 56: }
   982                           ;Main.c: 58: LCD_goto(0,0x40);
   983  07CD  3040               	movlw	(040h)
   984  07CE  00FD               	movwf	(??_main+0)+0
   985  07CF  087D               	movf	(??_main+0)+0,w
   986  07D0  00F3               	movwf	(?_LCD_goto)
   987  07D1  3000               	movlw	(0)
   988  07D2  120A  118A  227A   	fcall	_LCD_goto
              120A  118A         
   989                           	line	59
   990                           ;Main.c: 59: LCD_putchar(value_[3]);
   991  07D7  1283               	bcf	status, 5	;RP0=0, select bank0
   992  07D8  1303               	bcf	status, 6	;RP1=0, select bank0
   993  07D9  0840               	movf	0+(main@value_)+03h,w
   994  07DA  120A  118A  2242   	fcall	_LCD_putchar
              120A  118A         
   995                           	line	60
   996                           ;Main.c: 60: LCD_putchar('.');
   997  07DF  302E               	movlw	(02Eh)
   998  07E0  120A  118A  2242   	fcall	_LCD_putchar
              120A  118A         
   999                           	line	61
  1000                           ;Main.c: 61: LCD_putchar(value_[2]);
  1001  07E5  1283               	bcf	status, 5	;RP0=0, select bank0
  1002  07E6  1303               	bcf	status, 6	;RP1=0, select bank0
  1003  07E7  083F               	movf	0+(main@value_)+02h,w
  1004  07E8  120A  118A  2242   	fcall	_LCD_putchar
              120A  118A         
  1005                           	line	62
  1006                           ;Main.c: 62: LCD_putchar(value_[1]);
  1007  07ED  1283               	bcf	status, 5	;RP0=0, select bank0
  1008  07EE  1303               	bcf	status, 6	;RP1=0, select bank0
  1009  07EF  083E               	movf	0+(main@value_)+01h,w
  1010  07F0  120A  118A  2242   	fcall	_LCD_putchar
              120A  118A         
  1011  07F5  2EF8               	goto	l1395
  1012                           	line	63
  1013                           	
  1014  07F6                     l128:	
  1015                           	line	39
  1016  07F6  2EF8               	goto	l1395
  1017                           	
  1018  07F7                     l129:	
  1019                           	line	64
  1020                           	
  1021  07F7                     l1431:	
  1022                           ;Main.c: 63: }
  1023                           ;Main.c: 64: adc_off();
  1024  07F7  120A  118A  2233   	fcall	_adc_off
              120A  118A         
  1025                           	line	66
  1026                           ;Main.c: 66: while(1) continue;
  1027                           	
  1028  07FC                     l130:	
  1029                           	
  1030  07FC                     l131:	
  1031  07FC  2FFC               	goto	l130
  1032                           	
  1033  07FD                     l132:	
  1034                           	line	67
  1035                           	
  1036  07FD                     l133:	
  1037                           	global	start
  1038  07FD  120A  118A  2800   	ljmp	start
  1039                           	opt stack 0
  1040                           GLOBAL	__end_of_main
  1041  0800                     	__end_of_main:
  1042                           	signat	_main,88
  1043                           	global	_adc_on
  1044                           
  1045 ;; *************** function _adc_on *****************
  1046 ;; Defined at:
  1047 ;;		line 53 in file "adc.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;		None               void
  1054 ;; Registers used:
  1055 ;;		None
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           psect	text379,local,class=CODE,delta=2,merge=1
  1074                           global __ptext379
  1075  0237                     __ptext379:
  1076                           psect	text379
  1077                           	file	"adc.c"
  1078                           	line	53
  1079                           	global	__size_of_adc_on
  1080  0004                     	__size_of_adc_on	equ	__end_of_adc_on-_adc_on
  1081                           	
  1082  0237                     _adc_on:	
  1083                           	opt	stack 7
  1084                           ; Regs used in _adc_on: []
  1085                           	line	55
  1086                           	
  1087  0237                     l1069:	
  1088                           ;adc.c: 55: ADON = 1;
  1089  0237  1283               	bcf	status, 5	;RP0=0, select bank0
  1090  0238  1303               	bcf	status, 6	;RP1=0, select bank0
  1091  0239  141F               	bsf	(248/8),(248)&7	;volatile
  1092                           	line	56
  1093                           	
  1094  023A                     l38:	
  1095  023A  0008               	return
  1096                           	opt stack 0
  1097                           GLOBAL	__end_of_adc_on
  1098  023B                     	__end_of_adc_on:
  1099                           	signat	_adc_on,88
  1100                           	global	_adc_off
  1101                           
  1102 ;; *************** function _adc_off *****************
  1103 ;; Defined at:
  1104 ;;		line 72 in file "adc.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;		None               void
  1111 ;; Registers used:
  1112 ;;		None
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       0       0       0       0
  1119 ;;      Locals:         0       0       0       0       0
  1120 ;;      Temps:          0       0       0       0       0
  1121 ;;      Totals:         0       0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; This function calls:
  1125 ;;		Nothing
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           psect	text380,local,class=CODE,delta=2,merge=1
  1131                           global __ptext380
  1132  0233                     __ptext380:
  1133                           psect	text380
  1134                           	file	"adc.c"
  1135                           	line	72
  1136                           	global	__size_of_adc_off
  1137  0004                     	__size_of_adc_off	equ	__end_of_adc_off-_adc_off
  1138                           	
  1139  0233                     _adc_off:	
  1140                           	opt	stack 7
  1141                           ; Regs used in _adc_off: []
  1142                           	line	74
  1143                           	
  1144  0233                     l1071:	
  1145                           ;adc.c: 74: ADON = 0;
  1146  0233  1283               	bcf	status, 5	;RP0=0, select bank0
  1147  0234  1303               	bcf	status, 6	;RP1=0, select bank0
  1148  0235  101F               	bcf	(248/8),(248)&7	;volatile
  1149                           	line	75
  1150                           	
  1151  0236                     l41:	
  1152  0236  0008               	return
  1153                           	opt stack 0
  1154                           GLOBAL	__end_of_adc_off
  1155  0237                     	__end_of_adc_off:
  1156                           	signat	_adc_off,88
  1157                           	global	_ui_adc_read
  1158                           
  1159 ;; *************** function _ui_adc_read *****************
  1160 ;; Defined at:
  1161 ;;		line 91 in file "adc.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  ohm             2    4[COMMON] unsigned int 
  1166 ;; Return value:  Size  Location     Type
  1167 ;;                  2    0[COMMON] unsigned int 
  1168 ;; Registers used:
  1169 ;;		wreg, status,2, status,0, btemp+1
  1170 ;; Tracked objects:
  1171 ;;		On entry : 0/0
  1172 ;;		On exit  : 0/0
  1173 ;;		Unchanged: 0/0
  1174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1175 ;;      Params:         2       0       0       0       0
  1176 ;;      Locals:         2       0       0       0       0
  1177 ;;      Temps:          2       0       0       0       0
  1178 ;;      Totals:         6       0       0       0       0
  1179 ;;Total ram usage:        6 bytes
  1180 ;; Hardware stack levels used:    1
  1181 ;; This function calls:
  1182 ;;		Nothing
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           psect	text381,local,class=CODE,delta=2,merge=1
  1188                           global __ptext381
  1189  02E5                     __ptext381:
  1190                           psect	text381
  1191                           	file	"adc.c"
  1192                           	line	91
  1193                           	global	__size_of_ui_adc_read
  1194  0030                     	__size_of_ui_adc_read	equ	__end_of_ui_adc_read-_ui_adc_read
  1195                           	
  1196  02E5                     _ui_adc_read:	
  1197                           	opt	stack 7
  1198                           ; Regs used in _ui_adc_read: [wreg+status,2+status,0+btemp+1]
  1199                           	line	92
  1200                           	
  1201  02E5                     l1151:	
  1202                           ;adc.c: 92: unsigned int ohm = 0;
  1203  02E5  01F4               	clrf	(ui_adc_read@ohm)
  1204  02E6  01F5               	clrf	(ui_adc_read@ohm+1)
  1205                           	line	94
  1206                           	
  1207  02E7                     l1153:	
  1208                           ;adc.c: 94: CHS2 = 0;
  1209  02E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1210  02E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1211  02E9  129F               	bcf	(253/8),(253)&7	;volatile
  1212                           	line	95
  1213                           	
  1214  02EA                     l1155:	
  1215                           ;adc.c: 95: CHS1 = 0;
  1216  02EA  121F               	bcf	(252/8),(252)&7	;volatile
  1217                           	line	96
  1218                           	
  1219  02EB                     l1157:	
  1220                           ;adc.c: 96: CHS0 = 0;
  1221  02EB  119F               	bcf	(251/8),(251)&7	;volatile
  1222                           	line	99
  1223                           	
  1224  02EC                     l1159:	
  1225                           ;adc.c: 99: _delay((unsigned long)((1)*(2e6/4000.0)));
  1226                           	opt asmopt_off
  1227  02EC  30A6               movlw	166
  1228  02ED  00F2               movwf	(??_ui_adc_read+0)+0,f
  1229  02EE                     u1587:
  1230  02EE  0BF2               decfsz	(??_ui_adc_read+0)+0,f
  1231  02EF  2AEE               	goto	u1587
  1232  02F0  0000               	nop
  1233                           opt asmopt_on
  1234                           
  1235                           	line	102
  1236                           	
  1237  02F1                     l1161:	
  1238                           ;adc.c: 102: GO = 1;
  1239  02F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1240  02F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1241  02F3  151F               	bsf	(250/8),(250)&7	;volatile
  1242                           	line	103
  1243                           ;adc.c: 103: while (GO == 1);
  1244  02F4  2AF5               	goto	l44
  1245                           	
  1246  02F5                     l45:	
  1247                           	
  1248  02F5                     l44:	
  1249  02F5  191F               	btfsc	(250/8),(250)&7	;volatile
  1250  02F6  2AF8               	goto	u1031
  1251  02F7  2AF9               	goto	u1030
  1252  02F8                     u1031:
  1253  02F8  2AF5               	goto	l44
  1254  02F9                     u1030:
  1255  02F9  2AFA               	goto	l1163
  1256                           	
  1257  02FA                     l46:	
  1258                           	line	105
  1259                           	
  1260  02FA                     l1163:	
  1261                           ;adc.c: 105: ohm = (unsigned int)ADRESH << 8;
  1262  02FA  081E               	movf	(30),w	;volatile
  1263  02FB  00F2               	movwf	(??_ui_adc_read+0)+0+0
  1264  02FC  01F3               	clrf	(??_ui_adc_read+0)+0+1
  1265  02FD  0872               	movf	(??_ui_adc_read+0)+0,w
  1266  02FE  00F3               	movwf	(??_ui_adc_read+0)+1
  1267  02FF  01F2               	clrf	(??_ui_adc_read+0)+0
  1268  0300  0872               	movf	0+(??_ui_adc_read+0)+0,w
  1269  0301  00F4               	movwf	(ui_adc_read@ohm)
  1270  0302  0873               	movf	1+(??_ui_adc_read+0)+0,w
  1271  0303  00F5               	movwf	(ui_adc_read@ohm+1)
  1272                           	line	106
  1273                           	
  1274  0304                     l1165:	
  1275                           ;adc.c: 106: ohm = ohm + ADRESL;
  1276  0304  1683               	bsf	status, 5	;RP0=1, select bank1
  1277  0305  1303               	bcf	status, 6	;RP1=0, select bank1
  1278  0306  081E               	movf	(158)^080h,w	;volatile
  1279  0307  0774               	addwf	(ui_adc_read@ohm),w
  1280  0308  00F4               	movwf	(ui_adc_read@ohm)
  1281  0309  0875               	movf	(ui_adc_read@ohm+1),w
  1282  030A  1803               	skipnc
  1283  030B  0A75               	incf	(ui_adc_read@ohm+1),w
  1284  030C  00F5               	movwf	((ui_adc_read@ohm))+1
  1285                           	line	107
  1286                           	
  1287  030D                     l1167:	
  1288                           ;adc.c: 107: return ohm;
  1289  030D  0875               	movf	(ui_adc_read@ohm+1),w
  1290  030E  01F1               	clrf	(?_ui_adc_read+1)
  1291  030F  07F1               	addwf	(?_ui_adc_read+1)
  1292  0310  0874               	movf	(ui_adc_read@ohm),w
  1293  0311  01F0               	clrf	(?_ui_adc_read)
  1294  0312  07F0               	addwf	(?_ui_adc_read)
  1295                           
  1296  0313  2B14               	goto	l47
  1297                           	
  1298  0314                     l1169:	
  1299                           	line	108
  1300                           	
  1301  0314                     l47:	
  1302  0314  0008               	return
  1303                           	opt stack 0
  1304                           GLOBAL	__end_of_ui_adc_read
  1305  0315                     	__end_of_ui_adc_read:
  1306                           	signat	_ui_adc_read,90
  1307                           	global	_LCD_putstr
  1308                           
  1309 ;; *************** function _LCD_putstr *****************
  1310 ;; Defined at:
  1311 ;;		line 106 in file "lcd.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;  csz_string      1    wreg     PTR unsigned char 
  1314 ;;		 -> STR_1(9), 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  csz_string      1    4[COMMON] PTR unsigned char 
  1317 ;;		 -> STR_1(9), 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;		None               void
  1320 ;; Registers used:
  1321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       0       0       0       0
  1328 ;;      Locals:         1       0       0       0       0
  1329 ;;      Temps:          1       0       0       0       0
  1330 ;;      Totals:         2       0       0       0       0
  1331 ;;Total ram usage:        2 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    2
  1334 ;; This function calls:
  1335 ;;		_LCD_senddata
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           psect	text382,local,class=CODE,delta=2,merge=1
  1341                           global __ptext382
  1342  02C4                     __ptext382:
  1343                           psect	text382
  1344                           	file	"lcd.c"
  1345                           	line	106
  1346                           	global	__size_of_LCD_putstr
  1347  0021                     	__size_of_LCD_putstr	equ	__end_of_LCD_putstr-_LCD_putstr
  1348                           	
  1349  02C4                     _LCD_putstr:	
  1350                           	opt	stack 5
  1351                           ; Regs used in _LCD_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1352                           ;LCD_putstr@csz_string stored from wreg
  1353  02C4  00F4               	movwf	(LCD_putstr@csz_string)
  1354                           	line	108
  1355                           	
  1356  02C5                     l1361:	
  1357                           ;lcd.c: 108: while (*csz_string != '\0')
  1358  02C5  2AD7               	goto	l1367
  1359                           	
  1360  02C6                     l79:	
  1361                           	line	110
  1362                           	
  1363  02C6                     l1363:	
  1364                           ;lcd.c: 109: {
  1365                           ;lcd.c: 110: LCD_senddata(*csz_string);
  1366  02C6  0874               	movf	(LCD_putstr@csz_string),w
  1367  02C7  0084               	movwf	fsr0
  1368  02C8  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1369  02CD  120A  118A  225D   	fcall	_LCD_senddata
              120A  118A         
  1370                           	line	111
  1371                           	
  1372  02D2                     l1365:	
  1373                           ;lcd.c: 111: csz_string++;
  1374  02D2  3001               	movlw	(01h)
  1375  02D3  00F3               	movwf	(??_LCD_putstr+0)+0
  1376  02D4  0873               	movf	(??_LCD_putstr+0)+0,w
  1377  02D5  07F4               	addwf	(LCD_putstr@csz_string),f
  1378  02D6  2AD7               	goto	l1367
  1379                           	line	112
  1380                           	
  1381  02D7                     l78:	
  1382                           	line	108
  1383                           	
  1384  02D7                     l1367:	
  1385  02D7  0874               	movf	(LCD_putstr@csz_string),w
  1386  02D8  0084               	movwf	fsr0
  1387  02D9  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1388  02DE  3800               	iorlw	0
  1389  02DF  1D03               	skipz
  1390  02E0  2AE2               	goto	u1511
  1391  02E1  2AE3               	goto	u1510
  1392  02E2                     u1511:
  1393  02E2  2AC6               	goto	l1363
  1394  02E3                     u1510:
  1395  02E3  2AE4               	goto	l81
  1396                           	
  1397  02E4                     l80:	
  1398                           	line	113
  1399                           	
  1400  02E4                     l81:	
  1401  02E4  0008               	return
  1402                           	opt stack 0
  1403                           GLOBAL	__end_of_LCD_putstr
  1404  02E5                     	__end_of_LCD_putstr:
  1405                           	signat	_LCD_putstr,4216
  1406                           	global	_LCD_putchar
  1407                           
  1408 ;; *************** function _LCD_putchar *****************
  1409 ;; Defined at:
  1410 ;;		line 116 in file "lcd.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  c_data          1    wreg     unsigned char 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  c_data          1    3[COMMON] unsigned char 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;		None               void
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0, pclath, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1424 ;;      Params:         0       0       0       0       0
  1425 ;;      Locals:         1       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0
  1427 ;;      Totals:         1       0       0       0       0
  1428 ;;Total ram usage:        1 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    2
  1431 ;; This function calls:
  1432 ;;		_LCD_senddata
  1433 ;; This function is called by:
  1434 ;;		_main
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           psect	text383,local,class=CODE,delta=2,merge=1
  1438                           global __ptext383
  1439  0242                     __ptext383:
  1440                           psect	text383
  1441                           	file	"lcd.c"
  1442                           	line	116
  1443                           	global	__size_of_LCD_putchar
  1444  0008                     	__size_of_LCD_putchar	equ	__end_of_LCD_putchar-_LCD_putchar
  1445                           	
  1446  0242                     _LCD_putchar:	
  1447                           	opt	stack 5
  1448                           ; Regs used in _LCD_putchar: [wreg+status,2+status,0+pclath+cstack]
  1449                           ;LCD_putchar@c_data stored from wreg
  1450                           	line	118
  1451  0242  00F3               	movwf	(LCD_putchar@c_data)
  1452                           	
  1453  0243                     l1369:	
  1454                           ;lcd.c: 118: LCD_senddata(c_data);
  1455  0243  0873               	movf	(LCD_putchar@c_data),w
  1456  0244  120A  118A  225D   	fcall	_LCD_senddata
              120A  118A         
  1457                           	line	119
  1458                           	
  1459  0249                     l84:	
  1460  0249  0008               	return
  1461                           	opt stack 0
  1462                           GLOBAL	__end_of_LCD_putchar
  1463  024A                     	__end_of_LCD_putchar:
  1464                           	signat	_LCD_putchar,4216
  1465                           	global	_LCD_senddata
  1466                           
  1467 ;; *************** function _LCD_senddata *****************
  1468 ;; Defined at:
  1469 ;;		line 87 in file "lcd.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  var             1    wreg     unsigned char 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  var             1    2[COMMON] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;		None               void
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         1       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0
  1486 ;;      Totals:         1       0       0       0       0
  1487 ;;Total ram usage:        1 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    1
  1490 ;; This function calls:
  1491 ;;		_LCD_4bitsend
  1492 ;; This function is called by:
  1493 ;;		_LCD_putstr
  1494 ;;		_LCD_putchar
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           psect	text384,local,class=CODE,delta=2,merge=1
  1498                           global __ptext384
  1499  025D                     __ptext384:
  1500                           psect	text384
  1501                           	file	"lcd.c"
  1502                           	line	87
  1503                           	global	__size_of_LCD_senddata
  1504  000B                     	__size_of_LCD_senddata	equ	__end_of_LCD_senddata-_LCD_senddata
  1505                           	
  1506  025D                     _LCD_senddata:	
  1507                           	opt	stack 5
  1508                           ; Regs used in _LCD_senddata: [wreg+status,2+status,0+pclath+cstack]
  1509                           ;LCD_senddata@var stored from wreg
  1510  025D  00F2               	movwf	(LCD_senddata@var)
  1511                           	line	88
  1512                           	
  1513  025E                     l1243:	
  1514                           ;lcd.c: 88: RB2 = 1;
  1515  025E  1283               	bcf	status, 5	;RP0=0, select bank0
  1516  025F  1303               	bcf	status, 6	;RP1=0, select bank0
  1517  0260  1506               	bsf	(50/8),(50)&7	;volatile
  1518                           	line	89
  1519                           	
  1520  0261                     l1245:	
  1521                           ;lcd.c: 89: LCD_4bitsend(var);
  1522  0261  0872               	movf	(LCD_senddata@var),w
  1523  0262  120A  118A  24A9   	fcall	_LCD_4bitsend
              120A  118A         
  1524                           	line	90
  1525                           	
  1526  0267                     l75:	
  1527  0267  0008               	return
  1528                           	opt stack 0
  1529                           GLOBAL	__end_of_LCD_senddata
  1530  0268                     	__end_of_LCD_senddata:
  1531                           	signat	_LCD_senddata,4216
  1532                           	global	_LCD_goto
  1533                           
  1534 ;; *************** function _LCD_goto *****************
  1535 ;; Defined at:
  1536 ;;		line 129 in file "lcd.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  row             1    wreg     unsigned char 
  1539 ;;  column          1    3[COMMON] unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  row             1    4[COMMON] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;		None               void
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         1       0       0       0       0
  1552 ;;      Locals:         1       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0
  1554 ;;      Totals:         2       0       0       0       0
  1555 ;;Total ram usage:        2 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    2
  1558 ;; This function calls:
  1559 ;;		_LCD_command
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           psect	text385,local,class=CODE,delta=2,merge=1
  1565                           global __ptext385
  1566  027A                     __ptext385:
  1567                           psect	text385
  1568                           	file	"lcd.c"
  1569                           	line	129
  1570                           	global	__size_of_LCD_goto
  1571  0017                     	__size_of_LCD_goto	equ	__end_of_LCD_goto-_LCD_goto
  1572                           	
  1573  027A                     _LCD_goto:	
  1574                           	opt	stack 5
  1575                           ; Regs used in _LCD_goto: [wreg+status,2+status,0+pclath+cstack]
  1576                           ;LCD_goto@row stored from wreg
  1577  027A  00F4               	movwf	(LCD_goto@row)
  1578                           	line	130
  1579                           	
  1580  027B                     l1373:	
  1581                           ;lcd.c: 130: if(row == 0)
  1582  027B  08F4               	movf	(LCD_goto@row),f
  1583  027C  1D03               	skipz
  1584  027D  2A7F               	goto	u1521
  1585  027E  2A80               	goto	u1520
  1586  027F                     u1521:
  1587  027F  2A88               	goto	l1377
  1588  0280                     u1520:
  1589                           	line	131
  1590                           	
  1591  0280                     l1375:	
  1592                           ;lcd.c: 131: LCD_command(0x80 | column);
  1593  0280  0873               	movf	(LCD_goto@column),w
  1594  0281  3880               	iorlw	080h
  1595  0282  120A  118A  2252   	fcall	_LCD_command
              120A  118A         
  1596  0287  2A90               	goto	l92
  1597                           	line	132
  1598                           	
  1599  0288                     l90:	
  1600                           	line	133
  1601                           	
  1602  0288                     l1377:	
  1603                           ;lcd.c: 132: else
  1604                           ;lcd.c: 133: LCD_command(0x80 | 0x40 | column);
  1605  0288  0873               	movf	(LCD_goto@column),w
  1606  0289  38C0               	iorlw	0C0h
  1607  028A  120A  118A  2252   	fcall	_LCD_command
              120A  118A         
  1608  028F  2A90               	goto	l92
  1609                           	
  1610  0290                     l91:	
  1611                           	line	134
  1612                           	
  1613  0290                     l92:	
  1614  0290  0008               	return
  1615                           	opt stack 0
  1616                           GLOBAL	__end_of_LCD_goto
  1617  0291                     	__end_of_LCD_goto:
  1618                           	signat	_LCD_goto,8312
  1619                           	global	_initialize
  1620                           
  1621 ;; *************** function _initialize *****************
  1622 ;; Defined at:
  1623 ;;		line 84 in file "Main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;		None
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;		None
  1628 ;; Return value:  Size  Location     Type
  1629 ;;		None               void
  1630 ;; Registers used:
  1631 ;;		wreg, status,2, status,0, pclath, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1637 ;;      Params:         0       0       0       0       0
  1638 ;;      Locals:         0       0       0       0       0
  1639 ;;      Temps:          2       0       0       0       0
  1640 ;;      Totals:         2       0       0       0       0
  1641 ;;Total ram usage:        2 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    3
  1644 ;; This function calls:
  1645 ;;		_adc_initialize
  1646 ;;		_LCD_initialize
  1647 ;;		_LCD_clear
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           psect	text386,local,class=CODE,delta=2,merge=1
  1653                           global __ptext386
  1654  0291                     __ptext386:
  1655                           psect	text386
  1656                           	file	"Main.c"
  1657                           	line	84
  1658                           	global	__size_of_initialize
  1659  0018                     	__size_of_initialize	equ	__end_of_initialize-_initialize
  1660                           	
  1661  0291                     _initialize:	
  1662                           	opt	stack 4
  1663                           ; Regs used in _initialize: [wreg+status,2+status,0+pclath+cstack]
  1664                           	line	85
  1665                           	
  1666  0291                     l1379:	
  1667                           ;Main.c: 85: adc_initialize();
  1668  0291  120A  118A  2268   	fcall	_adc_initialize
              120A  118A         
  1669                           	line	86
  1670                           	
  1671  0296                     l1381:	
  1672                           ;Main.c: 86: _delay((unsigned long)((10)*(2e6/4000.0)));
  1673                           	opt asmopt_off
  1674  0296  3007               movlw	7
  1675  0297  00F6               movwf	((??_initialize+0)+0+1),f
  1676  0298  307D               	movlw	125
  1677  0299  00F5               movwf	((??_initialize+0)+0),f
  1678  029A                     u1597:
  1679  029A  0BF5               	decfsz	((??_initialize+0)+0),f
  1680  029B  2A9A               	goto	u1597
  1681  029C  0BF6               	decfsz	((??_initialize+0)+0+1),f
  1682  029D  2A9A               	goto	u1597
  1683                           opt asmopt_on
  1684                           
  1685                           	line	87
  1686                           ;Main.c: 87: LCD_initialize();
  1687  029E  120A  118A  2422   	fcall	_LCD_initialize
              120A  118A         
  1688                           	line	88
  1689                           ;Main.c: 88: LCD_clear();
  1690  02A3  120A  118A  223B   	fcall	_LCD_clear
              120A  118A         
  1691                           	line	89
  1692                           	
  1693  02A8                     l136:	
  1694  02A8  0008               	return
  1695                           	opt stack 0
  1696                           GLOBAL	__end_of_initialize
  1697  02A9                     	__end_of_initialize:
  1698                           	signat	_initialize,88
  1699                           	global	_adc_initialize
  1700                           
  1701 ;; *************** function _adc_initialize *****************
  1702 ;; Defined at:
  1703 ;;		line 19 in file "adc.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;		None
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;		None
  1708 ;; Return value:  Size  Location     Type
  1709 ;;		None               void
  1710 ;; Registers used:
  1711 ;;		None
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1717 ;;      Params:         0       0       0       0       0
  1718 ;;      Locals:         0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0
  1720 ;;      Totals:         0       0       0       0       0
  1721 ;;Total ram usage:        0 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_initialize
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           psect	text387,local,class=CODE,delta=2,merge=1
  1730                           global __ptext387
  1731  0268                     __ptext387:
  1732                           psect	text387
  1733                           	file	"adc.c"
  1734                           	line	19
  1735                           	global	__size_of_adc_initialize
  1736  0012                     	__size_of_adc_initialize	equ	__end_of_adc_initialize-_adc_initialize
  1737                           	
  1738  0268                     _adc_initialize:	
  1739                           	opt	stack 6
  1740                           ; Regs used in _adc_initialize: []
  1741                           	line	21
  1742                           	
  1743  0268                     l1067:	
  1744                           ;adc.c: 21: ADCS2 = 1;
  1745  0268  1683               	bsf	status, 5	;RP0=1, select bank1
  1746  0269  1303               	bcf	status, 6	;RP1=0, select bank1
  1747  026A  171F               	bsf	(1278/8)^080h,(1278)&7	;volatile
  1748                           	line	22
  1749                           ;adc.c: 22: ADCS1 = 1;
  1750  026B  1283               	bcf	status, 5	;RP0=0, select bank0
  1751  026C  1303               	bcf	status, 6	;RP1=0, select bank0
  1752  026D  179F               	bsf	(255/8),(255)&7	;volatile
  1753                           	line	23
  1754                           ;adc.c: 23: ADCS0 = 0;
  1755  026E  131F               	bcf	(254/8),(254)&7	;volatile
  1756                           	line	26
  1757                           ;adc.c: 26: PCFG3 = 1;
  1758  026F  1683               	bsf	status, 5	;RP0=1, select bank1
  1759  0270  1303               	bcf	status, 6	;RP1=0, select bank1
  1760  0271  159F               	bsf	(1275/8)^080h,(1275)&7	;volatile
  1761                           	line	27
  1762                           ;adc.c: 27: PCFG2 = 1;
  1763  0272  151F               	bsf	(1274/8)^080h,(1274)&7	;volatile
  1764                           	line	28
  1765                           ;adc.c: 28: PCFG1 = 1;
  1766  0273  149F               	bsf	(1273/8)^080h,(1273)&7	;volatile
  1767                           	line	29
  1768                           ;adc.c: 29: PCFG0 = 0;
  1769  0274  101F               	bcf	(1272/8)^080h,(1272)&7	;volatile
  1770                           	line	32
  1771                           ;adc.c: 32: ADFM = 1;
  1772  0275  179F               	bsf	(1279/8)^080h,(1279)&7	;volatile
  1773                           	line	35
  1774                           ;adc.c: 35: ADON = 0;
  1775  0276  1283               	bcf	status, 5	;RP0=0, select bank0
  1776  0277  1303               	bcf	status, 6	;RP1=0, select bank0
  1777  0278  101F               	bcf	(248/8),(248)&7	;volatile
  1778                           	line	36
  1779                           	
  1780  0279                     l35:	
  1781  0279  0008               	return
  1782                           	opt stack 0
  1783                           GLOBAL	__end_of_adc_initialize
  1784  027A                     	__end_of_adc_initialize:
  1785                           	signat	_adc_initialize,88
  1786                           	global	_LCD_initialize
  1787                           
  1788 ;; *************** function _LCD_initialize *****************
  1789 ;; Defined at:
  1790 ;;		line 35 in file "lcd.c"
  1791 ;; Parameters:    Size  Location     Type
  1792 ;;		None
  1793 ;; Auto vars:     Size  Location     Type
  1794 ;;		None
  1795 ;; Return value:  Size  Location     Type
  1796 ;;		None               void
  1797 ;; Registers used:
  1798 ;;		wreg, status,2, status,0, pclath, cstack
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1804 ;;      Params:         0       0       0       0       0
  1805 ;;      Locals:         0       0       0       0       0
  1806 ;;      Temps:          2       0       0       0       0
  1807 ;;      Totals:         2       0       0       0       0
  1808 ;;Total ram usage:        2 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    2
  1811 ;; This function calls:
  1812 ;;		_LCD_command
  1813 ;; This function is called by:
  1814 ;;		_initialize
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           psect	text388,local,class=CODE,delta=2,merge=1
  1818                           global __ptext388
  1819  0422                     __ptext388:
  1820                           psect	text388
  1821                           	file	"lcd.c"
  1822                           	line	35
  1823                           	global	__size_of_LCD_initialize
  1824  0087                     	__size_of_LCD_initialize	equ	__end_of_LCD_initialize-_LCD_initialize
  1825                           	
  1826  0422                     _LCD_initialize:	
  1827                           	opt	stack 4
  1828                           ; Regs used in _LCD_initialize: [wreg+status,2+status,0+pclath+cstack]
  1829                           	line	36
  1830                           	
  1831  0422                     l1297:	
  1832                           ;lcd.c: 36: _delay((unsigned long)((30)*(2e6/4000.0)));
  1833                           	opt asmopt_off
  1834  0422  3014               movlw	20
  1835  0423  00F4               movwf	((??_LCD_initialize+0)+0+1),f
  1836  0424  3079               	movlw	121
  1837  0425  00F3               movwf	((??_LCD_initialize+0)+0),f
  1838  0426                     u1607:
  1839  0426  0BF3               	decfsz	((??_LCD_initialize+0)+0),f
  1840  0427  2C26               	goto	u1607
  1841  0428  0BF4               	decfsz	((??_LCD_initialize+0)+0+1),f
  1842  0429  2C26               	goto	u1607
  1843  042A  2C2B               	nop2
  1844                           opt asmopt_on
  1845                           
  1846                           	line	38
  1847                           	
  1848  042B                     l1299:	
  1849                           ;lcd.c: 38: RB3 = 1;
  1850  042B  1283               	bcf	status, 5	;RP0=0, select bank0
  1851  042C  1303               	bcf	status, 6	;RP1=0, select bank0
  1852  042D  1586               	bsf	(51/8),(51)&7	;volatile
  1853                           	line	39
  1854                           ;lcd.c: 39: _delay((unsigned long)((20)*(2e6/4000.0)));
  1855                           	opt asmopt_off
  1856  042E  300D               movlw	13
  1857  042F  00F4               movwf	((??_LCD_initialize+0)+0+1),f
  1858  0430  30FB               	movlw	251
  1859  0431  00F3               movwf	((??_LCD_initialize+0)+0),f
  1860  0432                     u1617:
  1861  0432  0BF3               	decfsz	((??_LCD_initialize+0)+0),f
  1862  0433  2C32               	goto	u1617
  1863  0434  0BF4               	decfsz	((??_LCD_initialize+0)+0+1),f
  1864  0435  2C32               	goto	u1617
  1865  0436  2C37               	nop2
  1866                           opt asmopt_on
  1867                           
  1868                           	line	40
  1869                           	
  1870  0437                     l1301:	
  1871                           ;lcd.c: 40: RB3 = 0;
  1872  0437  1283               	bcf	status, 5	;RP0=0, select bank0
  1873  0438  1303               	bcf	status, 6	;RP1=0, select bank0
  1874  0439  1186               	bcf	(51/8),(51)&7	;volatile
  1875                           	line	41
  1876                           	
  1877  043A                     l1303:	
  1878                           ;lcd.c: 41: RB2 = 0;
  1879  043A  1106               	bcf	(50/8),(50)&7	;volatile
  1880                           	line	42
  1881                           	
  1882  043B                     l1305:	
  1883                           ;lcd.c: 42: RB7 = 0;
  1884  043B  1386               	bcf	(55/8),(55)&7	;volatile
  1885                           	line	43
  1886                           	
  1887  043C                     l1307:	
  1888                           ;lcd.c: 43: RB6 = 0;
  1889  043C  1306               	bcf	(54/8),(54)&7	;volatile
  1890                           	line	44
  1891                           	
  1892  043D                     l1309:	
  1893                           ;lcd.c: 44: RB5 = 1;
  1894  043D  1686               	bsf	(53/8),(53)&7	;volatile
  1895                           	line	45
  1896                           	
  1897  043E                     l1311:	
  1898                           ;lcd.c: 45: RB4 = 1;
  1899  043E  1606               	bsf	(52/8),(52)&7	;volatile
  1900                           	line	46
  1901                           	
  1902  043F                     l1313:	
  1903                           ;lcd.c: 46: RB3 = 1;
  1904  043F  1586               	bsf	(51/8),(51)&7	;volatile
  1905                           	line	47
  1906                           ;lcd.c: 47: _delay((unsigned long)((2)*(2e6/4000.0)));
  1907                           	opt asmopt_off
  1908  0440  30F9               movlw	249
  1909  0441  00F3               movwf	(??_LCD_initialize+0)+0,f
  1910  0442                     u1627:
  1911  0442  0000               	nop
  1912  0443  0BF3               decfsz	(??_LCD_initialize+0)+0,f
  1913  0444  2C42               	goto	u1627
  1914  0445  2C46               	nop2	;nop
  1915  0446  0000               	nop
  1916                           opt asmopt_on
  1917                           
  1918                           	line	48
  1919                           	
  1920  0447                     l1315:	
  1921                           ;lcd.c: 48: RB3 = 0;
  1922  0447  1283               	bcf	status, 5	;RP0=0, select bank0
  1923  0448  1303               	bcf	status, 6	;RP1=0, select bank0
  1924  0449  1186               	bcf	(51/8),(51)&7	;volatile
  1925                           	line	51
  1926                           	
  1927  044A                     l1317:	
  1928                           ;lcd.c: 51: RB7 = 0;
  1929  044A  1386               	bcf	(55/8),(55)&7	;volatile
  1930                           	line	52
  1931                           	
  1932  044B                     l1319:	
  1933                           ;lcd.c: 52: RB6 = 0;
  1934  044B  1306               	bcf	(54/8),(54)&7	;volatile
  1935                           	line	53
  1936                           	
  1937  044C                     l1321:	
  1938                           ;lcd.c: 53: RB5 = 1;
  1939  044C  1686               	bsf	(53/8),(53)&7	;volatile
  1940                           	line	54
  1941                           	
  1942  044D                     l1323:	
  1943                           ;lcd.c: 54: RB4 = 1;
  1944  044D  1606               	bsf	(52/8),(52)&7	;volatile
  1945                           	line	55
  1946                           	
  1947  044E                     l1325:	
  1948                           ;lcd.c: 55: RB3 = 1;
  1949  044E  1586               	bsf	(51/8),(51)&7	;volatile
  1950                           	line	56
  1951                           ;lcd.c: 56: _delay((unsigned long)((2)*(2e6/4000.0)));
  1952                           	opt asmopt_off
  1953  044F  30F9               movlw	249
  1954  0450  00F3               movwf	(??_LCD_initialize+0)+0,f
  1955  0451                     u1637:
  1956  0451  0000               	nop
  1957  0452  0BF3               decfsz	(??_LCD_initialize+0)+0,f
  1958  0453  2C51               	goto	u1637
  1959  0454  2C55               	nop2	;nop
  1960  0455  0000               	nop
  1961                           opt asmopt_on
  1962                           
  1963                           	line	57
  1964                           	
  1965  0456                     l1327:	
  1966                           ;lcd.c: 57: RB3 = 0;
  1967  0456  1283               	bcf	status, 5	;RP0=0, select bank0
  1968  0457  1303               	bcf	status, 6	;RP1=0, select bank0
  1969  0458  1186               	bcf	(51/8),(51)&7	;volatile
  1970                           	line	58
  1971                           ;lcd.c: 58: _delay((unsigned long)((2)*(2e6/4000.0)));
  1972                           	opt asmopt_off
  1973  0459  30F9               movlw	249
  1974  045A  00F3               movwf	(??_LCD_initialize+0)+0,f
  1975  045B                     u1647:
  1976  045B  0000               	nop
  1977  045C  0BF3               decfsz	(??_LCD_initialize+0)+0,f
  1978  045D  2C5B               	goto	u1647
  1979  045E  2C5F               	nop2	;nop
  1980  045F  0000               	nop
  1981                           opt asmopt_on
  1982                           
  1983                           	line	60
  1984                           	
  1985  0460                     l1329:	
  1986                           ;lcd.c: 60: RB7 = 0;
  1987  0460  1283               	bcf	status, 5	;RP0=0, select bank0
  1988  0461  1303               	bcf	status, 6	;RP1=0, select bank0
  1989  0462  1386               	bcf	(55/8),(55)&7	;volatile
  1990                           	line	61
  1991                           	
  1992  0463                     l1331:	
  1993                           ;lcd.c: 61: RB6 = 0;
  1994  0463  1306               	bcf	(54/8),(54)&7	;volatile
  1995                           	line	62
  1996                           	
  1997  0464                     l1333:	
  1998                           ;lcd.c: 62: RB5 = 1;
  1999  0464  1686               	bsf	(53/8),(53)&7	;volatile
  2000                           	line	63
  2001                           	
  2002  0465                     l1335:	
  2003                           ;lcd.c: 63: RB4 = 1;
  2004  0465  1606               	bsf	(52/8),(52)&7	;volatile
  2005                           	line	64
  2006                           	
  2007  0466                     l1337:	
  2008                           ;lcd.c: 64: RB3 = 1;
  2009  0466  1586               	bsf	(51/8),(51)&7	;volatile
  2010                           	line	65
  2011                           ;lcd.c: 65: _delay((unsigned long)((2)*(2e6/4000.0)));
  2012                           	opt asmopt_off
  2013  0467  30F9               movlw	249
  2014  0468  00F3               movwf	(??_LCD_initialize+0)+0,f
  2015  0469                     u1657:
  2016  0469  0000               	nop
  2017  046A  0BF3               decfsz	(??_LCD_initialize+0)+0,f
  2018  046B  2C69               	goto	u1657
  2019  046C  2C6D               	nop2	;nop
  2020  046D  0000               	nop
  2021                           opt asmopt_on
  2022                           
  2023                           	line	66
  2024                           	
  2025  046E                     l1339:	
  2026                           ;lcd.c: 66: RB3 = 0;
  2027  046E  1283               	bcf	status, 5	;RP0=0, select bank0
  2028  046F  1303               	bcf	status, 6	;RP1=0, select bank0
  2029  0470  1186               	bcf	(51/8),(51)&7	;volatile
  2030                           	line	67
  2031                           ;lcd.c: 67: _delay((unsigned long)((2)*(2e6/4000.0)));
  2032                           	opt asmopt_off
  2033  0471  30F9               movlw	249
  2034  0472  00F3               movwf	(??_LCD_initialize+0)+0,f
  2035  0473                     u1667:
  2036  0473  0000               	nop
  2037  0474  0BF3               decfsz	(??_LCD_initialize+0)+0,f
  2038  0475  2C73               	goto	u1667
  2039  0476  2C77               	nop2	;nop
  2040  0477  0000               	nop
  2041                           opt asmopt_on
  2042                           
  2043                           	line	69
  2044                           	
  2045  0478                     l1341:	
  2046                           ;lcd.c: 69: RB7 = 0;
  2047  0478  1283               	bcf	status, 5	;RP0=0, select bank0
  2048  0479  1303               	bcf	status, 6	;RP1=0, select bank0
  2049  047A  1386               	bcf	(55/8),(55)&7	;volatile
  2050                           	line	70
  2051                           	
  2052  047B                     l1343:	
  2053                           ;lcd.c: 70: RB6 = 0;
  2054  047B  1306               	bcf	(54/8),(54)&7	;volatile
  2055                           	line	71
  2056                           	
  2057  047C                     l1345:	
  2058                           ;lcd.c: 71: RB5 = 1;
  2059  047C  1686               	bsf	(53/8),(53)&7	;volatile
  2060                           	line	72
  2061                           	
  2062  047D                     l1347:	
  2063                           ;lcd.c: 72: RB4 = 0;
  2064  047D  1206               	bcf	(52/8),(52)&7	;volatile
  2065                           	line	73
  2066                           	
  2067  047E                     l1349:	
  2068                           ;lcd.c: 73: RB3 = 1;
  2069  047E  1586               	bsf	(51/8),(51)&7	;volatile
  2070                           	line	74
  2071                           ;lcd.c: 74: _delay((unsigned long)((2)*(2e6/4000.0)));
  2072                           	opt asmopt_off
  2073  047F  30F9               movlw	249
  2074  0480  00F3               movwf	(??_LCD_initialize+0)+0,f
  2075  0481                     u1677:
  2076  0481  0000               	nop
  2077  0482  0BF3               decfsz	(??_LCD_initialize+0)+0,f
  2078  0483  2C81               	goto	u1677
  2079  0484  2C85               	nop2	;nop
  2080  0485  0000               	nop
  2081                           opt asmopt_on
  2082                           
  2083                           	line	75
  2084                           	
  2085  0486                     l1351:	
  2086                           ;lcd.c: 75: RB3 = 0;
  2087  0486  1283               	bcf	status, 5	;RP0=0, select bank0
  2088  0487  1303               	bcf	status, 6	;RP1=0, select bank0
  2089  0488  1186               	bcf	(51/8),(51)&7	;volatile
  2090                           	line	76
  2091                           ;lcd.c: 76: _delay((unsigned long)((2)*(2e6/4000.0)));
  2092                           	opt asmopt_off
  2093  0489  30F9               movlw	249
  2094  048A  00F3               movwf	(??_LCD_initialize+0)+0,f
  2095  048B                     u1687:
  2096  048B  0000               	nop
  2097  048C  0BF3               decfsz	(??_LCD_initialize+0)+0,f
  2098  048D  2C8B               	goto	u1687
  2099  048E  2C8F               	nop2	;nop
  2100  048F  0000               	nop
  2101                           opt asmopt_on
  2102                           
  2103                           	line	79
  2104                           	
  2105  0490                     l1353:	
  2106                           ;lcd.c: 79: LCD_command (0x28);
  2107  0490  3028               	movlw	(028h)
  2108  0491  120A  118A  2252   	fcall	_LCD_command
              120A  118A         
  2109                           	line	80
  2110                           	
  2111  0496                     l1355:	
  2112                           ;lcd.c: 80: LCD_command (0x0C);
  2113  0496  300C               	movlw	(0Ch)
  2114  0497  120A  118A  2252   	fcall	_LCD_command
              120A  118A         
  2115                           	line	81
  2116                           	
  2117  049C                     l1357:	
  2118                           ;lcd.c: 81: LCD_command (0x01);
  2119  049C  3001               	movlw	(01h)
  2120  049D  120A  118A  2252   	fcall	_LCD_command
              120A  118A         
  2121                           	line	82
  2122                           	
  2123  04A2                     l1359:	
  2124                           ;lcd.c: 82: LCD_command (0x06);
  2125  04A2  3006               	movlw	(06h)
  2126  04A3  120A  118A  2252   	fcall	_LCD_command
              120A  118A         
  2127                           	line	83
  2128                           	
  2129  04A8                     l72:	
  2130  04A8  0008               	return
  2131                           	opt stack 0
  2132                           GLOBAL	__end_of_LCD_initialize
  2133  04A9                     	__end_of_LCD_initialize:
  2134                           	signat	_LCD_initialize,88
  2135                           	global	_LCD_clear
  2136                           
  2137 ;; *************** function _LCD_clear *****************
  2138 ;; Defined at:
  2139 ;;		line 124 in file "lcd.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;		None
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;		None
  2144 ;; Return value:  Size  Location     Type
  2145 ;;		None               void
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, pclath, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2153 ;;      Params:         0       0       0       0       0
  2154 ;;      Locals:         0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0
  2156 ;;      Totals:         0       0       0       0       0
  2157 ;;Total ram usage:        0 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    2
  2160 ;; This function calls:
  2161 ;;		_LCD_command
  2162 ;; This function is called by:
  2163 ;;		_initialize
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           psect	text389,local,class=CODE,delta=2,merge=1
  2167                           global __ptext389
  2168  023B                     __ptext389:
  2169                           psect	text389
  2170                           	file	"lcd.c"
  2171                           	line	124
  2172                           	global	__size_of_LCD_clear
  2173  0007                     	__size_of_LCD_clear	equ	__end_of_LCD_clear-_LCD_clear
  2174                           	
  2175  023B                     _LCD_clear:	
  2176                           	opt	stack 4
  2177                           ; Regs used in _LCD_clear: [wreg+status,2+status,0+pclath+cstack]
  2178                           	line	125
  2179                           	
  2180  023B                     l1371:	
  2181                           ;lcd.c: 125: LCD_command(0b00000001);
  2182  023B  3001               	movlw	(01h)
  2183  023C  120A  118A  2252   	fcall	_LCD_command
              120A  118A         
  2184                           	line	126
  2185                           	
  2186  0241                     l87:	
  2187  0241  0008               	return
  2188                           	opt stack 0
  2189                           GLOBAL	__end_of_LCD_clear
  2190  0242                     	__end_of_LCD_clear:
  2191                           	signat	_LCD_clear,88
  2192                           	global	_LCD_command
  2193                           
  2194 ;; *************** function _LCD_command *****************
  2195 ;; Defined at:
  2196 ;;		line 7 in file "lcd.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  var             1    wreg     unsigned char 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  var             1    2[COMMON] unsigned char 
  2201 ;; Return value:  Size  Location     Type
  2202 ;;		None               void
  2203 ;; Registers used:
  2204 ;;		wreg, status,2, status,0, pclath, cstack
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2210 ;;      Params:         0       0       0       0       0
  2211 ;;      Locals:         1       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0
  2213 ;;      Totals:         1       0       0       0       0
  2214 ;;Total ram usage:        1 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    1
  2217 ;; This function calls:
  2218 ;;		_LCD_4bitsend
  2219 ;; This function is called by:
  2220 ;;		_LCD_initialize
  2221 ;;		_LCD_clear
  2222 ;;		_LCD_goto
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225                           psect	text390,local,class=CODE,delta=2,merge=1
  2226                           global __ptext390
  2227  0252                     __ptext390:
  2228                           psect	text390
  2229                           	file	"lcd.c"
  2230                           	line	7
  2231                           	global	__size_of_LCD_command
  2232  000B                     	__size_of_LCD_command	equ	__end_of_LCD_command-_LCD_command
  2233                           	
  2234  0252                     _LCD_command:	
  2235                           	opt	stack 5
  2236                           ; Regs used in _LCD_command: [wreg+status,2+status,0+pclath+cstack]
  2237                           ;LCD_command@var stored from wreg
  2238  0252  00F2               	movwf	(LCD_command@var)
  2239                           	line	8
  2240                           	
  2241  0253                     l1239:	
  2242                           ;lcd.c: 8: RB2 = 0;
  2243  0253  1283               	bcf	status, 5	;RP0=0, select bank0
  2244  0254  1303               	bcf	status, 6	;RP1=0, select bank0
  2245  0255  1106               	bcf	(50/8),(50)&7	;volatile
  2246                           	line	9
  2247                           	
  2248  0256                     l1241:	
  2249                           ;lcd.c: 9: LCD_4bitsend(var);
  2250  0256  0872               	movf	(LCD_command@var),w
  2251  0257  120A  118A  24A9   	fcall	_LCD_4bitsend
              120A  118A         
  2252                           	line	10
  2253                           	
  2254  025C                     l66:	
  2255  025C  0008               	return
  2256                           	opt stack 0
  2257                           GLOBAL	__end_of_LCD_command
  2258  025D                     	__end_of_LCD_command:
  2259                           	signat	_LCD_command,4216
  2260                           	global	_LCD_4bitsend
  2261                           
  2262 ;; *************** function _LCD_4bitsend *****************
  2263 ;; Defined at:
  2264 ;;		line 13 in file "lcd.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  data            1    wreg     unsigned char 
  2267 ;; Auto vars:     Size  Location     Type
  2268 ;;  data            1    1[COMMON] unsigned char 
  2269 ;; Return value:  Size  Location     Type
  2270 ;;		None               void
  2271 ;; Registers used:
  2272 ;;		wreg, status,2, status,0
  2273 ;; Tracked objects:
  2274 ;;		On entry : 0/0
  2275 ;;		On exit  : 0/0
  2276 ;;		Unchanged: 0/0
  2277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2278 ;;      Params:         0       0       0       0       0
  2279 ;;      Locals:         1       0       0       0       0
  2280 ;;      Temps:          1       0       0       0       0
  2281 ;;      Totals:         2       0       0       0       0
  2282 ;;Total ram usage:        2 bytes
  2283 ;; Hardware stack levels used:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		_LCD_command
  2288 ;;		_LCD_senddata
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           psect	text391,local,class=CODE,delta=2,merge=1
  2292                           global __ptext391
  2293  04A9                     __ptext391:
  2294                           psect	text391
  2295                           	file	"lcd.c"
  2296                           	line	13
  2297                           	global	__size_of_LCD_4bitsend
  2298  00A0                     	__size_of_LCD_4bitsend	equ	__end_of_LCD_4bitsend-_LCD_4bitsend
  2299                           	
  2300  04A9                     _LCD_4bitsend:	
  2301                           	opt	stack 5
  2302                           ; Regs used in _LCD_4bitsend: [wreg+status,2+status,0]
  2303                           ;LCD_4bitsend@data stored from wreg
  2304  04A9  00F1               	movwf	(LCD_4bitsend@data)
  2305                           	line	14
  2306                           	
  2307  04AA                     l1171:	
  2308                           ;lcd.c: 14: RB7 = 1 & (data >> 7);
  2309  04AA  0871               	movf	(LCD_4bitsend@data),w
  2310  04AB  00F0               	movwf	(??_LCD_4bitsend+0)+0
  2311  04AC  3007               	movlw	07h
  2312  04AD                     u1045:
  2313  04AD  1003               	clrc
  2314  04AE  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  2315  04AF  3EFF               	addlw	-1
  2316  04B0  1D03               	skipz
  2317  04B1  2CAD               	goto	u1045
  2318  04B2  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  2319  04B3  2CB5               	goto	u1051
  2320  04B4  2CB9               	goto	u1050
  2321                           	
  2322  04B5                     u1051:
  2323  04B5  1283               	bcf	status, 5	;RP0=0, select bank0
  2324  04B6  1303               	bcf	status, 6	;RP1=0, select bank0
  2325  04B7  1786               	bsf	(55/8),(55)&7	;volatile
  2326  04B8  2CBC               	goto	u1064
  2327  04B9                     u1050:
  2328  04B9  1283               	bcf	status, 5	;RP0=0, select bank0
  2329  04BA  1303               	bcf	status, 6	;RP1=0, select bank0
  2330  04BB  1386               	bcf	(55/8),(55)&7	;volatile
  2331  04BC                     u1064:
  2332                           	line	15
  2333                           ;lcd.c: 15: RB6 = 1 & (data >> 6);
  2334  04BC  0871               	movf	(LCD_4bitsend@data),w
  2335  04BD  00F0               	movwf	(??_LCD_4bitsend+0)+0
  2336  04BE  3006               	movlw	06h
  2337  04BF                     u1075:
  2338  04BF  1003               	clrc
  2339  04C0  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  2340  04C1  3EFF               	addlw	-1
  2341  04C2  1D03               	skipz
  2342  04C3  2CBF               	goto	u1075
  2343  04C4  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  2344  04C5  2CC7               	goto	u1081
  2345  04C6  2CCB               	goto	u1080
  2346                           	
  2347  04C7                     u1081:
  2348  04C7  1283               	bcf	status, 5	;RP0=0, select bank0
  2349  04C8  1303               	bcf	status, 6	;RP1=0, select bank0
  2350  04C9  1706               	bsf	(54/8),(54)&7	;volatile
  2351  04CA  2CCE               	goto	u1094
  2352  04CB                     u1080:
  2353  04CB  1283               	bcf	status, 5	;RP0=0, select bank0
  2354  04CC  1303               	bcf	status, 6	;RP1=0, select bank0
  2355  04CD  1306               	bcf	(54/8),(54)&7	;volatile
  2356  04CE                     u1094:
  2357                           	line	16
  2358                           ;lcd.c: 16: RB5 = 1 & (data >> 5);
  2359  04CE  0871               	movf	(LCD_4bitsend@data),w
  2360  04CF  00F0               	movwf	(??_LCD_4bitsend+0)+0
  2361  04D0  3005               	movlw	05h
  2362  04D1                     u1105:
  2363  04D1  1003               	clrc
  2364  04D2  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  2365  04D3  3EFF               	addlw	-1
  2366  04D4  1D03               	skipz
  2367  04D5  2CD1               	goto	u1105
  2368  04D6  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  2369  04D7  2CD9               	goto	u1111
  2370  04D8  2CDD               	goto	u1110
  2371                           	
  2372  04D9                     u1111:
  2373  04D9  1283               	bcf	status, 5	;RP0=0, select bank0
  2374  04DA  1303               	bcf	status, 6	;RP1=0, select bank0
  2375  04DB  1686               	bsf	(53/8),(53)&7	;volatile
  2376  04DC  2CE0               	goto	u1124
  2377  04DD                     u1110:
  2378  04DD  1283               	bcf	status, 5	;RP0=0, select bank0
  2379  04DE  1303               	bcf	status, 6	;RP1=0, select bank0
  2380  04DF  1286               	bcf	(53/8),(53)&7	;volatile
  2381  04E0                     u1124:
  2382                           	line	17
  2383                           ;lcd.c: 17: RB4 = 1 & (data >> 4);
  2384  04E0  0871               	movf	(LCD_4bitsend@data),w
  2385  04E1  00F0               	movwf	(??_LCD_4bitsend+0)+0
  2386  04E2  3004               	movlw	04h
  2387  04E3                     u1135:
  2388  04E3  1003               	clrc
  2389  04E4  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  2390  04E5  3EFF               	addlw	-1
  2391  04E6  1D03               	skipz
  2392  04E7  2CE3               	goto	u1135
  2393  04E8  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  2394  04E9  2CEB               	goto	u1141
  2395  04EA  2CEF               	goto	u1140
  2396                           	
  2397  04EB                     u1141:
  2398  04EB  1283               	bcf	status, 5	;RP0=0, select bank0
  2399  04EC  1303               	bcf	status, 6	;RP1=0, select bank0
  2400  04ED  1606               	bsf	(52/8),(52)&7	;volatile
  2401  04EE  2CF2               	goto	u1154
  2402  04EF                     u1140:
  2403  04EF  1283               	bcf	status, 5	;RP0=0, select bank0
  2404  04F0  1303               	bcf	status, 6	;RP1=0, select bank0
  2405  04F1  1206               	bcf	(52/8),(52)&7	;volatile
  2406  04F2                     u1154:
  2407                           	line	18
  2408                           	
  2409  04F2                     l1173:	
  2410                           ;lcd.c: 18: RB3 = 1;
  2411  04F2  1586               	bsf	(51/8),(51)&7	;volatile
  2412                           	line	19
  2413                           	
  2414  04F3                     l1175:	
  2415                           ;lcd.c: 19: _delay((unsigned long)((2)*(2e6/4000.0)));
  2416                           	opt asmopt_off
  2417  04F3  30F9               movlw	249
  2418  04F4  00F0               movwf	(??_LCD_4bitsend+0)+0,f
  2419  04F5                     u1697:
  2420  04F5  0000               	nop
  2421  04F6  0BF0               decfsz	(??_LCD_4bitsend+0)+0,f
  2422  04F7  2CF5               	goto	u1697
  2423  04F8  2CF9               	nop2	;nop
  2424  04F9  0000               	nop
  2425                           opt asmopt_on
  2426                           
  2427                           	line	20
  2428                           	
  2429  04FA                     l1177:	
  2430                           ;lcd.c: 20: RB3 = 0;
  2431  04FA  1283               	bcf	status, 5	;RP0=0, select bank0
  2432  04FB  1303               	bcf	status, 6	;RP1=0, select bank0
  2433  04FC  1186               	bcf	(51/8),(51)&7	;volatile
  2434                           	line	23
  2435                           	
  2436  04FD                     l1179:	
  2437                           ;lcd.c: 23: RB7 = 1 & (data >> 3);
  2438  04FD  0871               	movf	(LCD_4bitsend@data),w
  2439  04FE  00F0               	movwf	(??_LCD_4bitsend+0)+0
  2440  04FF  3003               	movlw	03h
  2441  0500                     u1165:
  2442  0500  1003               	clrc
  2443  0501  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  2444  0502  3EFF               	addlw	-1
  2445  0503  1D03               	skipz
  2446  0504  2D00               	goto	u1165
  2447  0505  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  2448  0506  2D08               	goto	u1171
  2449  0507  2D0C               	goto	u1170
  2450                           	
  2451  0508                     u1171:
  2452  0508  1283               	bcf	status, 5	;RP0=0, select bank0
  2453  0509  1303               	bcf	status, 6	;RP1=0, select bank0
  2454  050A  1786               	bsf	(55/8),(55)&7	;volatile
  2455  050B  2D0F               	goto	u1184
  2456  050C                     u1170:
  2457  050C  1283               	bcf	status, 5	;RP0=0, select bank0
  2458  050D  1303               	bcf	status, 6	;RP1=0, select bank0
  2459  050E  1386               	bcf	(55/8),(55)&7	;volatile
  2460  050F                     u1184:
  2461                           	line	24
  2462                           	
  2463  050F                     l1181:	
  2464                           ;lcd.c: 24: RB6 = 1 & (data >> 2);
  2465  050F  0871               	movf	(LCD_4bitsend@data),w
  2466  0510  00F0               	movwf	(??_LCD_4bitsend+0)+0
  2467  0511  3002               	movlw	02h
  2468  0512                     u1195:
  2469  0512  1003               	clrc
  2470  0513  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  2471  0514  3EFF               	addlw	-1
  2472  0515  1D03               	skipz
  2473  0516  2D12               	goto	u1195
  2474  0517  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  2475  0518  2D1A               	goto	u1201
  2476  0519  2D1E               	goto	u1200
  2477                           	
  2478  051A                     u1201:
  2479  051A  1283               	bcf	status, 5	;RP0=0, select bank0
  2480  051B  1303               	bcf	status, 6	;RP1=0, select bank0
  2481  051C  1706               	bsf	(54/8),(54)&7	;volatile
  2482  051D  2D21               	goto	u1214
  2483  051E                     u1200:
  2484  051E  1283               	bcf	status, 5	;RP0=0, select bank0
  2485  051F  1303               	bcf	status, 6	;RP1=0, select bank0
  2486  0520  1306               	bcf	(54/8),(54)&7	;volatile
  2487  0521                     u1214:
  2488                           	line	25
  2489                           	
  2490  0521                     l1183:	
  2491                           ;lcd.c: 25: RB5 = 1 & (data >> 1);
  2492  0521  0871               	movf	(LCD_4bitsend@data),w
  2493  0522  00F0               	movwf	(??_LCD_4bitsend+0)+0
  2494  0523  3001               	movlw	01h
  2495  0524                     u1225:
  2496  0524  1003               	clrc
  2497  0525  0CF0               	rrf	(??_LCD_4bitsend+0)+0,f
  2498  0526  3EFF               	addlw	-1
  2499  0527  1D03               	skipz
  2500  0528  2D24               	goto	u1225
  2501  0529  1870               	btfsc	0+(??_LCD_4bitsend+0)+0,0
  2502  052A  2D2C               	goto	u1231
  2503  052B  2D30               	goto	u1230
  2504                           	
  2505  052C                     u1231:
  2506  052C  1283               	bcf	status, 5	;RP0=0, select bank0
  2507  052D  1303               	bcf	status, 6	;RP1=0, select bank0
  2508  052E  1686               	bsf	(53/8),(53)&7	;volatile
  2509  052F  2D33               	goto	u1244
  2510  0530                     u1230:
  2511  0530  1283               	bcf	status, 5	;RP0=0, select bank0
  2512  0531  1303               	bcf	status, 6	;RP1=0, select bank0
  2513  0532  1286               	bcf	(53/8),(53)&7	;volatile
  2514  0533                     u1244:
  2515                           	line	26
  2516                           	
  2517  0533                     l1185:	
  2518                           ;lcd.c: 26: RB4 = 1 & data;
  2519  0533  1871               	btfsc	(LCD_4bitsend@data),0
  2520  0534  2D36               	goto	u1251
  2521  0535  2D3A               	goto	u1250
  2522                           	
  2523  0536                     u1251:
  2524  0536  1283               	bcf	status, 5	;RP0=0, select bank0
  2525  0537  1303               	bcf	status, 6	;RP1=0, select bank0
  2526  0538  1606               	bsf	(52/8),(52)&7	;volatile
  2527  0539  2D3D               	goto	u1264
  2528  053A                     u1250:
  2529  053A  1283               	bcf	status, 5	;RP0=0, select bank0
  2530  053B  1303               	bcf	status, 6	;RP1=0, select bank0
  2531  053C  1206               	bcf	(52/8),(52)&7	;volatile
  2532  053D                     u1264:
  2533                           	line	27
  2534                           	
  2535  053D                     l1187:	
  2536                           ;lcd.c: 27: RB3 = 1;
  2537  053D  1586               	bsf	(51/8),(51)&7	;volatile
  2538                           	line	28
  2539                           ;lcd.c: 28: _delay((unsigned long)((2)*(2e6/4000.0)));
  2540                           	opt asmopt_off
  2541  053E  30F9               movlw	249
  2542  053F  00F0               movwf	(??_LCD_4bitsend+0)+0,f
  2543  0540                     u1707:
  2544  0540  0000               	nop
  2545  0541  0BF0               decfsz	(??_LCD_4bitsend+0)+0,f
  2546  0542  2D40               	goto	u1707
  2547  0543  2D44               	nop2	;nop
  2548  0544  0000               	nop
  2549                           opt asmopt_on
  2550                           
  2551                           	line	29
  2552                           	
  2553  0545                     l1189:	
  2554                           ;lcd.c: 29: RB3 = 0;
  2555  0545  1283               	bcf	status, 5	;RP0=0, select bank0
  2556  0546  1303               	bcf	status, 6	;RP1=0, select bank0
  2557  0547  1186               	bcf	(51/8),(51)&7	;volatile
  2558                           	line	31
  2559                           	
  2560  0548                     l69:	
  2561  0548  0008               	return
  2562                           	opt stack 0
  2563                           GLOBAL	__end_of_LCD_4bitsend
  2564  0549                     	__end_of_LCD_4bitsend:
  2565                           	signat	_LCD_4bitsend,4216
  2566                           	global	___lwdiv
  2567                           
  2568 ;; *************** function ___lwdiv *****************
  2569 ;; Defined at:
  2570 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.00\sources\lwdiv.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;  divisor         2    0[COMMON] unsigned int 
  2573 ;;  dividend        2    2[COMMON] unsigned int 
  2574 ;; Auto vars:     Size  Location     Type
  2575 ;;  quotient        2    5[COMMON] unsigned int 
  2576 ;;  counter         1    7[COMMON] unsigned char 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  2    0[COMMON] unsigned int 
  2579 ;; Registers used:
  2580 ;;		wreg, status,2, status,0
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2586 ;;      Params:         4       0       0       0       0
  2587 ;;      Locals:         3       0       0       0       0
  2588 ;;      Temps:          1       0       0       0       0
  2589 ;;      Totals:         8       0       0       0       0
  2590 ;;Total ram usage:        8 bytes
  2591 ;; Hardware stack levels used:    1
  2592 ;; This function calls:
  2593 ;;		Nothing
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           psect	text392,local,class=CODE,delta=2,merge=1
  2599                           global __ptext392
  2600  0359                     __ptext392:
  2601                           psect	text392
  2602                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.00\sources\lwdiv.c"
  2603                           	line	5
  2604                           	global	__size_of___lwdiv
  2605  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2606                           	
  2607  0359                     ___lwdiv:	
  2608                           	opt	stack 7
  2609                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2610                           	line	9
  2611                           	
  2612  0359                     l1073:	
  2613  0359  01F5               	clrf	(___lwdiv@quotient)
  2614  035A  01F6               	clrf	(___lwdiv@quotient+1)
  2615                           	line	10
  2616                           	
  2617  035B                     l1075:	
  2618  035B  0871               	movf	(___lwdiv@divisor+1),w
  2619  035C  0470               	iorwf	(___lwdiv@divisor),w
  2620  035D  1903               	skipnz
  2621  035E  2B60               	goto	u791
  2622  035F  2B61               	goto	u790
  2623  0360                     u791:
  2624  0360  2B9F               	goto	l1095
  2625  0361                     u790:
  2626                           	line	11
  2627                           	
  2628  0361                     l1077:	
  2629  0361  01F7               	clrf	(___lwdiv@counter)
  2630  0362  1403               	bsf	status,0
  2631  0363  0DF7               	rlf	(___lwdiv@counter),f
  2632                           	line	12
  2633  0364  2B71               	goto	l1083
  2634                           	
  2635  0365                     l233:	
  2636                           	line	13
  2637                           	
  2638  0365                     l1079:	
  2639  0365  3001               	movlw	01h
  2640                           	
  2641  0366                     u805:
  2642  0366  1003               	clrc
  2643  0367  0DF0               	rlf	(___lwdiv@divisor),f
  2644  0368  0DF1               	rlf	(___lwdiv@divisor+1),f
  2645  0369  3EFF               	addlw	-1
  2646  036A  1D03               	skipz
  2647  036B  2B66               	goto	u805
  2648                           	line	14
  2649                           	
  2650  036C                     l1081:	
  2651  036C  3001               	movlw	(01h)
  2652  036D  00F4               	movwf	(??___lwdiv+0)+0
  2653  036E  0874               	movf	(??___lwdiv+0)+0,w
  2654  036F  07F7               	addwf	(___lwdiv@counter),f
  2655  0370  2B71               	goto	l1083
  2656                           	line	15
  2657                           	
  2658  0371                     l232:	
  2659                           	line	12
  2660                           	
  2661  0371                     l1083:	
  2662  0371  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  2663  0372  2B74               	goto	u811
  2664  0373  2B75               	goto	u810
  2665  0374                     u811:
  2666  0374  2B65               	goto	l1079
  2667  0375                     u810:
  2668  0375  2B77               	goto	l1085
  2669                           	
  2670  0376                     l234:	
  2671  0376  2B77               	goto	l1085
  2672                           	line	16
  2673                           	
  2674  0377                     l235:	
  2675                           	line	17
  2676                           	
  2677  0377                     l1085:	
  2678  0377  3001               	movlw	01h
  2679                           	
  2680  0378                     u825:
  2681  0378  1003               	clrc
  2682  0379  0DF5               	rlf	(___lwdiv@quotient),f
  2683  037A  0DF6               	rlf	(___lwdiv@quotient+1),f
  2684  037B  3EFF               	addlw	-1
  2685  037C  1D03               	skipz
  2686  037D  2B78               	goto	u825
  2687                           	line	18
  2688  037E  0871               	movf	(___lwdiv@divisor+1),w
  2689  037F  0273               	subwf	(___lwdiv@dividend+1),w
  2690  0380  1D03               	skipz
  2691  0381  2B84               	goto	u835
  2692  0382  0870               	movf	(___lwdiv@divisor),w
  2693  0383  0272               	subwf	(___lwdiv@dividend),w
  2694  0384                     u835:
  2695  0384  1C03               	skipc
  2696  0385  2B87               	goto	u831
  2697  0386  2B88               	goto	u830
  2698  0387                     u831:
  2699  0387  2B90               	goto	l1091
  2700  0388                     u830:
  2701                           	line	19
  2702                           	
  2703  0388                     l1087:	
  2704  0388  0870               	movf	(___lwdiv@divisor),w
  2705  0389  02F2               	subwf	(___lwdiv@dividend),f
  2706  038A  0871               	movf	(___lwdiv@divisor+1),w
  2707  038B  1C03               	skipc
  2708  038C  03F3               	decf	(___lwdiv@dividend+1),f
  2709  038D  02F3               	subwf	(___lwdiv@dividend+1),f
  2710                           	line	20
  2711                           	
  2712  038E                     l1089:	
  2713  038E  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  2714  038F  2B90               	goto	l1091
  2715                           	line	21
  2716                           	
  2717  0390                     l236:	
  2718                           	line	22
  2719                           	
  2720  0390                     l1091:	
  2721  0390  3001               	movlw	01h
  2722                           	
  2723  0391                     u845:
  2724  0391  1003               	clrc
  2725  0392  0CF1               	rrf	(___lwdiv@divisor+1),f
  2726  0393  0CF0               	rrf	(___lwdiv@divisor),f
  2727  0394  3EFF               	addlw	-1
  2728  0395  1D03               	skipz
  2729  0396  2B91               	goto	u845
  2730                           	line	23
  2731                           	
  2732  0397                     l1093:	
  2733  0397  3001               	movlw	low(01h)
  2734  0398  02F7               	subwf	(___lwdiv@counter),f
  2735  0399  1D03               	btfss	status,2
  2736  039A  2B9C               	goto	u851
  2737  039B  2B9D               	goto	u850
  2738  039C                     u851:
  2739  039C  2B77               	goto	l1085
  2740  039D                     u850:
  2741  039D  2B9F               	goto	l1095
  2742                           	
  2743  039E                     l237:	
  2744  039E  2B9F               	goto	l1095
  2745                           	line	24
  2746                           	
  2747  039F                     l231:	
  2748                           	line	25
  2749                           	
  2750  039F                     l1095:	
  2751  039F  0876               	movf	(___lwdiv@quotient+1),w
  2752  03A0  01F1               	clrf	(?___lwdiv+1)
  2753  03A1  07F1               	addwf	(?___lwdiv+1)
  2754  03A2  0875               	movf	(___lwdiv@quotient),w
  2755  03A3  01F0               	clrf	(?___lwdiv)
  2756  03A4  07F0               	addwf	(?___lwdiv)
  2757                           
  2758  03A5  2BA6               	goto	l238
  2759                           	
  2760  03A6                     l1097:	
  2761                           	line	26
  2762                           	
  2763  03A6                     l238:	
  2764  03A6  0008               	return
  2765                           	opt stack 0
  2766                           GLOBAL	__end_of___lwdiv
  2767  03A7                     	__end_of___lwdiv:
  2768                           	signat	___lwdiv,8314
  2769                           	global	___lwmod
  2770                           
  2771 ;; *************** function ___lwmod *****************
  2772 ;; Defined at:
  2773 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.00\sources\lwmod.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  divisor         2    0[COMMON] unsigned int 
  2776 ;;  dividend        2    2[COMMON] unsigned int 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  counter         1    5[COMMON] unsigned char 
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  2    0[COMMON] unsigned int 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2788 ;;      Params:         4       0       0       0       0
  2789 ;;      Locals:         1       0       0       0       0
  2790 ;;      Temps:          1       0       0       0       0
  2791 ;;      Totals:         6       0       0       0       0
  2792 ;;Total ram usage:        6 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_main
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           psect	text393,local,class=CODE,delta=2,merge=1
  2801                           global __ptext393
  2802  0315                     __ptext393:
  2803                           psect	text393
  2804                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.00\sources\lwmod.c"
  2805                           	line	5
  2806                           	global	__size_of___lwmod
  2807  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2808                           	
  2809  0315                     ___lwmod:	
  2810                           	opt	stack 7
  2811                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2812                           	line	8
  2813                           	
  2814  0315                     l1099:	
  2815  0315  0871               	movf	(___lwmod@divisor+1),w
  2816  0316  0470               	iorwf	(___lwmod@divisor),w
  2817  0317  1903               	skipnz
  2818  0318  2B1A               	goto	u861
  2819  0319  2B1B               	goto	u860
  2820  031A                     u861:
  2821  031A  2B51               	goto	l1117
  2822  031B                     u860:
  2823                           	line	9
  2824                           	
  2825  031B                     l1101:	
  2826  031B  01F5               	clrf	(___lwmod@counter)
  2827  031C  1403               	bsf	status,0
  2828  031D  0DF5               	rlf	(___lwmod@counter),f
  2829                           	line	10
  2830  031E  2B2B               	goto	l1107
  2831                           	
  2832  031F                     l243:	
  2833                           	line	11
  2834                           	
  2835  031F                     l1103:	
  2836  031F  3001               	movlw	01h
  2837                           	
  2838  0320                     u875:
  2839  0320  1003               	clrc
  2840  0321  0DF0               	rlf	(___lwmod@divisor),f
  2841  0322  0DF1               	rlf	(___lwmod@divisor+1),f
  2842  0323  3EFF               	addlw	-1
  2843  0324  1D03               	skipz
  2844  0325  2B20               	goto	u875
  2845                           	line	12
  2846                           	
  2847  0326                     l1105:	
  2848  0326  3001               	movlw	(01h)
  2849  0327  00F4               	movwf	(??___lwmod+0)+0
  2850  0328  0874               	movf	(??___lwmod+0)+0,w
  2851  0329  07F5               	addwf	(___lwmod@counter),f
  2852  032A  2B2B               	goto	l1107
  2853                           	line	13
  2854                           	
  2855  032B                     l242:	
  2856                           	line	10
  2857                           	
  2858  032B                     l1107:	
  2859  032B  1FF1               	btfss	(___lwmod@divisor+1),(15)&7
  2860  032C  2B2E               	goto	u881
  2861  032D  2B2F               	goto	u880
  2862  032E                     u881:
  2863  032E  2B1F               	goto	l1103
  2864  032F                     u880:
  2865  032F  2B31               	goto	l1109
  2866                           	
  2867  0330                     l244:	
  2868  0330  2B31               	goto	l1109
  2869                           	line	14
  2870                           	
  2871  0331                     l245:	
  2872                           	line	15
  2873                           	
  2874  0331                     l1109:	
  2875  0331  0871               	movf	(___lwmod@divisor+1),w
  2876  0332  0273               	subwf	(___lwmod@dividend+1),w
  2877  0333  1D03               	skipz
  2878  0334  2B37               	goto	u895
  2879  0335  0870               	movf	(___lwmod@divisor),w
  2880  0336  0272               	subwf	(___lwmod@dividend),w
  2881  0337                     u895:
  2882  0337  1C03               	skipc
  2883  0338  2B3A               	goto	u891
  2884  0339  2B3B               	goto	u890
  2885  033A                     u891:
  2886  033A  2B42               	goto	l1113
  2887  033B                     u890:
  2888                           	line	16
  2889                           	
  2890  033B                     l1111:	
  2891  033B  0870               	movf	(___lwmod@divisor),w
  2892  033C  02F2               	subwf	(___lwmod@dividend),f
  2893  033D  0871               	movf	(___lwmod@divisor+1),w
  2894  033E  1C03               	skipc
  2895  033F  03F3               	decf	(___lwmod@dividend+1),f
  2896  0340  02F3               	subwf	(___lwmod@dividend+1),f
  2897  0341  2B42               	goto	l1113
  2898                           	
  2899  0342                     l246:	
  2900                           	line	17
  2901                           	
  2902  0342                     l1113:	
  2903  0342  3001               	movlw	01h
  2904                           	
  2905  0343                     u905:
  2906  0343  1003               	clrc
  2907  0344  0CF1               	rrf	(___lwmod@divisor+1),f
  2908  0345  0CF0               	rrf	(___lwmod@divisor),f
  2909  0346  3EFF               	addlw	-1
  2910  0347  1D03               	skipz
  2911  0348  2B43               	goto	u905
  2912                           	line	18
  2913                           	
  2914  0349                     l1115:	
  2915  0349  3001               	movlw	low(01h)
  2916  034A  02F5               	subwf	(___lwmod@counter),f
  2917  034B  1D03               	btfss	status,2
  2918  034C  2B4E               	goto	u911
  2919  034D  2B4F               	goto	u910
  2920  034E                     u911:
  2921  034E  2B31               	goto	l1109
  2922  034F                     u910:
  2923  034F  2B51               	goto	l1117
  2924                           	
  2925  0350                     l247:	
  2926  0350  2B51               	goto	l1117
  2927                           	line	19
  2928                           	
  2929  0351                     l241:	
  2930                           	line	20
  2931                           	
  2932  0351                     l1117:	
  2933  0351  0873               	movf	(___lwmod@dividend+1),w
  2934  0352  01F1               	clrf	(?___lwmod+1)
  2935  0353  07F1               	addwf	(?___lwmod+1)
  2936  0354  0872               	movf	(___lwmod@dividend),w
  2937  0355  01F0               	clrf	(?___lwmod)
  2938  0356  07F0               	addwf	(?___lwmod)
  2939                           
  2940  0357  2B58               	goto	l248
  2941                           	
  2942  0358                     l1119:	
  2943                           	line	21
  2944                           	
  2945  0358                     l248:	
  2946  0358  0008               	return
  2947                           	opt stack 0
  2948                           GLOBAL	__end_of___lwmod
  2949  0359                     	__end_of___lwmod:
  2950                           	signat	___lwmod,8314
  2951                           	global	___ftmul
  2952                           
  2953 ;; *************** function ___ftmul *****************
  2954 ;; Defined at:
  2955 ;;		line 52 in file "C:\Program Files (x86)\Microchip\xc8\v1.00\sources\ftmul.c"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;  f1              3   13[BANK0 ] float 
  2958 ;;  f2              3   16[BANK0 ] float 
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;  f3_as_produc    3   24[BANK0 ] unsigned um
  2961 ;;  sign            1   28[BANK0 ] unsigned char 
  2962 ;;  cntr            1   27[BANK0 ] unsigned char 
  2963 ;;  exp             1   23[BANK0 ] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  3   13[BANK0 ] float 
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0, pclath, cstack
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       6       0       0       0
  2974 ;;      Locals:         0       6       0       0       0
  2975 ;;      Temps:          0       4       0       0       0
  2976 ;;      Totals:         0      16       0       0       0
  2977 ;;Total ram usage:       16 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    1
  2980 ;; This function calls:
  2981 ;;		___ftpack
  2982 ;; This function is called by:
  2983 ;;		_main
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           psect	text394,local,class=CODE,delta=2,merge=1
  2987                           global __ptext394
  2988  05EF                     __ptext394:
  2989                           psect	text394
  2990                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.00\sources\ftmul.c"
  2991                           	line	52
  2992                           	global	__size_of___ftmul
  2993  00EE                     	__size_of___ftmul	equ	__end_of___ftmul-___ftmul
  2994                           	
  2995  05EF                     ___ftmul:	
  2996                           	opt	stack 6
  2997                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2998                           	line	56
  2999                           	
  3000  05EF                     l1247:	
  3001  05EF  1283               	bcf	status, 5	;RP0=0, select bank0
  3002  05F0  1303               	bcf	status, 6	;RP1=0, select bank0
  3003  05F1  082D               	movf	(___ftmul@f1),w
  3004  05F2  00B3               	movwf	((??___ftmul+0)+0)
  3005  05F3  082E               	movf	(___ftmul@f1+1),w
  3006  05F4  00B4               	movwf	((??___ftmul+0)+0+1)
  3007  05F5  082F               	movf	(___ftmul@f1+2),w
  3008  05F6  00B5               	movwf	((??___ftmul+0)+0+2)
  3009  05F7  1003               	clrc
  3010  05F8  0D34               	rlf	(??___ftmul+0)+1,w
  3011  05F9  0D35               	rlf	(??___ftmul+0)+2,w
  3012  05FA  00B6               	movwf	(??___ftmul+3)+0
  3013  05FB  0836               	movf	(??___ftmul+3)+0,w
  3014  05FC  00B7               	movwf	(___ftmul@exp)
  3015  05FD  08B7               	movf	((___ftmul@exp)),f
  3016  05FE  1D03               	skipz
  3017  05FF  2E01               	goto	u1371
  3018  0600  2E02               	goto	u1370
  3019  0601                     u1371:
  3020  0601  2E0A               	goto	l1253
  3021  0602                     u1370:
  3022                           	line	57
  3023                           	
  3024  0602                     l1249:	
  3025  0602  3000               	movlw	0x0
  3026  0603  00AD               	movwf	(?___ftmul)
  3027  0604  3000               	movlw	0x0
  3028  0605  00AE               	movwf	(?___ftmul+1)
  3029  0606  3000               	movlw	0x0
  3030  0607  00AF               	movwf	(?___ftmul+2)
  3031  0608  2EDC               	goto	l324
  3032                           	
  3033  0609                     l1251:	
  3034  0609  2EDC               	goto	l324
  3035                           	
  3036  060A                     l323:	
  3037                           	line	58
  3038                           	
  3039  060A                     l1253:	
  3040  060A  0830               	movf	(___ftmul@f2),w
  3041  060B  00B3               	movwf	((??___ftmul+0)+0)
  3042  060C  0831               	movf	(___ftmul@f2+1),w
  3043  060D  00B4               	movwf	((??___ftmul+0)+0+1)
  3044  060E  0832               	movf	(___ftmul@f2+2),w
  3045  060F  00B5               	movwf	((??___ftmul+0)+0+2)
  3046  0610  1003               	clrc
  3047  0611  0D34               	rlf	(??___ftmul+0)+1,w
  3048  0612  0D35               	rlf	(??___ftmul+0)+2,w
  3049  0613  00B6               	movwf	(??___ftmul+3)+0
  3050  0614  0836               	movf	(??___ftmul+3)+0,w
  3051  0615  00BC               	movwf	(___ftmul@sign)
  3052  0616  08BC               	movf	((___ftmul@sign)),f
  3053  0617  1D03               	skipz
  3054  0618  2E1A               	goto	u1381
  3055  0619  2E1B               	goto	u1380
  3056  061A                     u1381:
  3057  061A  2E23               	goto	l1259
  3058  061B                     u1380:
  3059                           	line	59
  3060                           	
  3061  061B                     l1255:	
  3062  061B  3000               	movlw	0x0
  3063  061C  00AD               	movwf	(?___ftmul)
  3064  061D  3000               	movlw	0x0
  3065  061E  00AE               	movwf	(?___ftmul+1)
  3066  061F  3000               	movlw	0x0
  3067  0620  00AF               	movwf	(?___ftmul+2)
  3068  0621  2EDC               	goto	l324
  3069                           	
  3070  0622                     l1257:	
  3071  0622  2EDC               	goto	l324
  3072                           	
  3073  0623                     l325:	
  3074                           	line	60
  3075                           	
  3076  0623                     l1259:	
  3077  0623  083C               	movf	(___ftmul@sign),w
  3078  0624  3E7B               	addlw	07Bh
  3079  0625  00B3               	movwf	(??___ftmul+0)+0
  3080  0626  0833               	movf	(??___ftmul+0)+0,w
  3081  0627  07B7               	addwf	(___ftmul@exp),f
  3082                           	line	61
  3083  0628  082D               	movf	(___ftmul@f1),w
  3084  0629  00B3               	movwf	((??___ftmul+0)+0)
  3085  062A  082E               	movf	(___ftmul@f1+1),w
  3086  062B  00B4               	movwf	((??___ftmul+0)+0+1)
  3087  062C  082F               	movf	(___ftmul@f1+2),w
  3088  062D  00B5               	movwf	((??___ftmul+0)+0+2)
  3089  062E  3010               	movlw	010h
  3090  062F                     u1395:
  3091  062F  1003               	clrc
  3092  0630  0CB5               	rrf	(??___ftmul+0)+2,f
  3093  0631  0CB4               	rrf	(??___ftmul+0)+1,f
  3094  0632  0CB3               	rrf	(??___ftmul+0)+0,f
  3095  0633                     u1390:
  3096  0633  3EFF               	addlw	-1
  3097  0634  1D03               	skipz
  3098  0635  2E2F               	goto	u1395
  3099  0636  0833               	movf	0+(??___ftmul+0)+0,w
  3100  0637  00B6               	movwf	(??___ftmul+3)+0
  3101  0638  0836               	movf	(??___ftmul+3)+0,w
  3102  0639  00BC               	movwf	(___ftmul@sign)
  3103                           	line	62
  3104  063A  0830               	movf	(___ftmul@f2),w
  3105  063B  00B3               	movwf	((??___ftmul+0)+0)
  3106  063C  0831               	movf	(___ftmul@f2+1),w
  3107  063D  00B4               	movwf	((??___ftmul+0)+0+1)
  3108  063E  0832               	movf	(___ftmul@f2+2),w
  3109  063F  00B5               	movwf	((??___ftmul+0)+0+2)
  3110  0640  3010               	movlw	010h
  3111  0641                     u1405:
  3112  0641  1003               	clrc
  3113  0642  0CB5               	rrf	(??___ftmul+0)+2,f
  3114  0643  0CB4               	rrf	(??___ftmul+0)+1,f
  3115  0644  0CB3               	rrf	(??___ftmul+0)+0,f
  3116  0645                     u1400:
  3117  0645  3EFF               	addlw	-1
  3118  0646  1D03               	skipz
  3119  0647  2E41               	goto	u1405
  3120  0648  0833               	movf	0+(??___ftmul+0)+0,w
  3121  0649  00B6               	movwf	(??___ftmul+3)+0
  3122  064A  0836               	movf	(??___ftmul+3)+0,w
  3123  064B  06BC               	xorwf	(___ftmul@sign),f
  3124                           	line	63
  3125  064C  3080               	movlw	(080h)
  3126  064D  00B3               	movwf	(??___ftmul+0)+0
  3127  064E  0833               	movf	(??___ftmul+0)+0,w
  3128  064F  05BC               	andwf	(___ftmul@sign),f
  3129                           	line	64
  3130                           	
  3131  0650                     l1261:	
  3132  0650  17AE               	bsf	(___ftmul@f1)+(15/8),(15)&7
  3133                           	line	66
  3134                           	
  3135  0651                     l1263:	
  3136  0651  17B1               	bsf	(___ftmul@f2)+(15/8),(15)&7
  3137                           	line	67
  3138                           	
  3139  0652                     l1265:	
  3140  0652  30FF               	movlw	0FFh
  3141  0653  05B0               	andwf	(___ftmul@f2),f
  3142  0654  30FF               	movlw	0FFh
  3143  0655  05B1               	andwf	(___ftmul@f2+1),f
  3144  0656  3000               	movlw	0
  3145  0657  05B2               	andwf	(___ftmul@f2+2),f
  3146                           	line	68
  3147                           	
  3148  0658                     l1267:	
  3149  0658  3000               	movlw	0
  3150  0659  00B8               	movwf	(___ftmul@f3_as_product)
  3151  065A  3000               	movlw	0
  3152  065B  00B9               	movwf	(___ftmul@f3_as_product+1)
  3153  065C  3000               	movlw	0
  3154  065D  00BA               	movwf	(___ftmul@f3_as_product+2)
  3155                           	line	69
  3156                           	
  3157  065E                     l1269:	
  3158  065E  3007               	movlw	(07h)
  3159  065F  00B3               	movwf	(??___ftmul+0)+0
  3160  0660  0833               	movf	(??___ftmul+0)+0,w
  3161  0661  00BB               	movwf	(___ftmul@cntr)
  3162  0662  2E63               	goto	l1271
  3163                           	line	70
  3164                           	
  3165  0663                     l326:	
  3166                           	line	71
  3167                           	
  3168  0663                     l1271:	
  3169  0663  1C2D               	btfss	(___ftmul@f1),(0)&7
  3170  0664  2E66               	goto	u1411
  3171  0665  2E67               	goto	u1410
  3172  0666                     u1411:
  3173  0666  2E78               	goto	l1275
  3174  0667                     u1410:
  3175                           	line	72
  3176                           	
  3177  0667                     l1273:	
  3178  0667  0830               	movf	(___ftmul@f2),w
  3179  0668  07B8               	addwf	(___ftmul@f3_as_product),f
  3180  0669  0831               	movf	(___ftmul@f2+1),w
  3181  066A  1103               	clrz
  3182  066B  1803               	skipnc
  3183  066C  0A31               	incf	(___ftmul@f2+1),w
  3184  066D  1903               	skipnz
  3185  066E  2E70               	goto	u1421
  3186  066F  07B9               	addwf	(___ftmul@f3_as_product+1),f
  3187  0670                     u1421:
  3188  0670  0832               	movf	(___ftmul@f2+2),w
  3189  0671  1103               	clrz
  3190  0672  1803               	skipnc
  3191  0673  0A32               	incf	(___ftmul@f2+2),w
  3192  0674  1903               	skipnz
  3193  0675  2E77               	goto	u1422
  3194  0676  07BA               	addwf	(___ftmul@f3_as_product+2),f
  3195  0677                     u1422:
  3196                           
  3197  0677  2E78               	goto	l1275
  3198                           	
  3199  0678                     l327:	
  3200                           	line	73
  3201                           	
  3202  0678                     l1275:	
  3203  0678  3001               	movlw	01h
  3204  0679                     u1435:
  3205  0679  1003               	clrc
  3206  067A  0CAF               	rrf	(___ftmul@f1+2),f
  3207  067B  0CAE               	rrf	(___ftmul@f1+1),f
  3208  067C  0CAD               	rrf	(___ftmul@f1),f
  3209  067D  3EFF               	addlw	-1
  3210  067E  1D03               	skipz
  3211  067F  2E79               	goto	u1435
  3212                           
  3213                           	line	74
  3214                           	
  3215  0680                     l1277:	
  3216  0680  3001               	movlw	01h
  3217  0681                     u1445:
  3218  0681  1003               	clrc
  3219  0682  0DB0               	rlf	(___ftmul@f2),f
  3220  0683  0DB1               	rlf	(___ftmul@f2+1),f
  3221  0684  0DB2               	rlf	(___ftmul@f2+2),f
  3222  0685  3EFF               	addlw	-1
  3223  0686  1D03               	skipz
  3224  0687  2E81               	goto	u1445
  3225                           	line	75
  3226                           	
  3227  0688                     l1279:	
  3228  0688  3001               	movlw	low(01h)
  3229  0689  02BB               	subwf	(___ftmul@cntr),f
  3230  068A  1D03               	btfss	status,2
  3231  068B  2E8D               	goto	u1451
  3232  068C  2E8E               	goto	u1450
  3233  068D                     u1451:
  3234  068D  2E63               	goto	l1271
  3235  068E                     u1450:
  3236  068E  2E8F               	goto	l1281
  3237                           	
  3238  068F                     l328:	
  3239                           	line	76
  3240                           	
  3241  068F                     l1281:	
  3242  068F  3009               	movlw	(09h)
  3243  0690  00B3               	movwf	(??___ftmul+0)+0
  3244  0691  0833               	movf	(??___ftmul+0)+0,w
  3245  0692  00BB               	movwf	(___ftmul@cntr)
  3246  0693  2E94               	goto	l1283
  3247                           	line	77
  3248                           	
  3249  0694                     l329:	
  3250                           	line	78
  3251                           	
  3252  0694                     l1283:	
  3253  0694  1C2D               	btfss	(___ftmul@f1),(0)&7
  3254  0695  2E97               	goto	u1461
  3255  0696  2E98               	goto	u1460
  3256  0697                     u1461:
  3257  0697  2EA9               	goto	l1287
  3258  0698                     u1460:
  3259                           	line	79
  3260                           	
  3261  0698                     l1285:	
  3262  0698  0830               	movf	(___ftmul@f2),w
  3263  0699  07B8               	addwf	(___ftmul@f3_as_product),f
  3264  069A  0831               	movf	(___ftmul@f2+1),w
  3265  069B  1103               	clrz
  3266  069C  1803               	skipnc
  3267  069D  0A31               	incf	(___ftmul@f2+1),w
  3268  069E  1903               	skipnz
  3269  069F  2EA1               	goto	u1471
  3270  06A0  07B9               	addwf	(___ftmul@f3_as_product+1),f
  3271  06A1                     u1471:
  3272  06A1  0832               	movf	(___ftmul@f2+2),w
  3273  06A2  1103               	clrz
  3274  06A3  1803               	skipnc
  3275  06A4  0A32               	incf	(___ftmul@f2+2),w
  3276  06A5  1903               	skipnz
  3277  06A6  2EA8               	goto	u1472
  3278  06A7  07BA               	addwf	(___ftmul@f3_as_product+2),f
  3279  06A8                     u1472:
  3280                           
  3281  06A8  2EA9               	goto	l1287
  3282                           	
  3283  06A9                     l330:	
  3284                           	line	80
  3285                           	
  3286  06A9                     l1287:	
  3287  06A9  3001               	movlw	01h
  3288  06AA                     u1485:
  3289  06AA  1003               	clrc
  3290  06AB  0CAF               	rrf	(___ftmul@f1+2),f
  3291  06AC  0CAE               	rrf	(___ftmul@f1+1),f
  3292  06AD  0CAD               	rrf	(___ftmul@f1),f
  3293  06AE  3EFF               	addlw	-1
  3294  06AF  1D03               	skipz
  3295  06B0  2EAA               	goto	u1485
  3296                           
  3297                           	line	81
  3298                           	
  3299  06B1                     l1289:	
  3300  06B1  3001               	movlw	01h
  3301  06B2                     u1495:
  3302  06B2  1003               	clrc
  3303  06B3  0CBA               	rrf	(___ftmul@f3_as_product+2),f
  3304  06B4  0CB9               	rrf	(___ftmul@f3_as_product+1),f
  3305  06B5  0CB8               	rrf	(___ftmul@f3_as_product),f
  3306  06B6  3EFF               	addlw	-1
  3307  06B7  1D03               	skipz
  3308  06B8  2EB2               	goto	u1495
  3309                           
  3310                           	line	82
  3311                           	
  3312  06B9                     l1291:	
  3313  06B9  3001               	movlw	low(01h)
  3314  06BA  02BB               	subwf	(___ftmul@cntr),f
  3315  06BB  1D03               	btfss	status,2
  3316  06BC  2EBE               	goto	u1501
  3317  06BD  2EBF               	goto	u1500
  3318  06BE                     u1501:
  3319  06BE  2E94               	goto	l1283
  3320  06BF                     u1500:
  3321  06BF  2EC0               	goto	l1293
  3322                           	
  3323  06C0                     l331:	
  3324                           	line	83
  3325                           	
  3326  06C0                     l1293:	
  3327  06C0  0838               	movf	(___ftmul@f3_as_product),w
  3328  06C1  00F0               	movwf	(?___ftpack)
  3329  06C2  0839               	movf	(___ftmul@f3_as_product+1),w
  3330  06C3  00F1               	movwf	(?___ftpack+1)
  3331  06C4  083A               	movf	(___ftmul@f3_as_product+2),w
  3332  06C5  00F2               	movwf	(?___ftpack+2)
  3333  06C6  0837               	movf	(___ftmul@exp),w
  3334  06C7  00B3               	movwf	(??___ftmul+0)+0
  3335  06C8  0833               	movf	(??___ftmul+0)+0,w
  3336  06C9  00F3               	movwf	0+(?___ftpack)+03h
  3337  06CA  083C               	movf	(___ftmul@sign),w
  3338  06CB  00B4               	movwf	(??___ftmul+1)+0
  3339  06CC  0834               	movf	(??___ftmul+1)+0,w
  3340  06CD  00F4               	movwf	0+(?___ftpack)+04h
  3341  06CE  120A  118A  23A7   	fcall	___ftpack
              120A  118A         
  3342  06D3  0870               	movf	(0+(?___ftpack)),w
  3343  06D4  1283               	bcf	status, 5	;RP0=0, select bank0
  3344  06D5  1303               	bcf	status, 6	;RP1=0, select bank0
  3345  06D6  00AD               	movwf	(?___ftmul)
  3346  06D7  0871               	movf	(1+(?___ftpack)),w
  3347  06D8  00AE               	movwf	(?___ftmul+1)
  3348  06D9  0872               	movf	(2+(?___ftpack)),w
  3349  06DA  00AF               	movwf	(?___ftmul+2)
  3350  06DB  2EDC               	goto	l324
  3351                           	
  3352  06DC                     l1295:	
  3353                           	line	84
  3354                           	
  3355  06DC                     l324:	
  3356  06DC  0008               	return
  3357                           	opt stack 0
  3358                           GLOBAL	__end_of___ftmul
  3359  06DD                     	__end_of___ftmul:
  3360                           	signat	___ftmul,8315
  3361                           	global	___fttol
  3362                           
  3363 ;; *************** function ___fttol *****************
  3364 ;; Defined at:
  3365 ;;		line 45 in file "C:\Program Files (x86)\Microchip\xc8\v1.00\sources\fttol.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;  f1              3    8[COMMON] float 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  lval            4    5[BANK0 ] unsigned long 
  3370 ;;  exp1            1    9[BANK0 ] unsigned char 
  3371 ;;  sign1           1    4[BANK0 ] unsigned char 
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  4    8[COMMON] long 
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3381 ;;      Params:         4       0       0       0       0
  3382 ;;      Locals:         0       6       0       0       0
  3383 ;;      Temps:          0       4       0       0       0
  3384 ;;      Totals:         4      10       0       0       0
  3385 ;;Total ram usage:       14 bytes
  3386 ;; Hardware stack levels used:    1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_main
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           psect	text395,local,class=CODE,delta=2,merge=1
  3394                           global __ptext395
  3395  0549                     __ptext395:
  3396                           psect	text395
  3397                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.00\sources\fttol.c"
  3398                           	line	45
  3399                           	global	__size_of___fttol
  3400  00A6                     	__size_of___fttol	equ	__end_of___fttol-___fttol
  3401                           	
  3402  0549                     ___fttol:	
  3403                           	opt	stack 7
  3404                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3405                           	line	49
  3406                           	
  3407  0549                     l1191:	
  3408  0549  0878               	movf	(___fttol@f1),w
  3409  054A  1283               	bcf	status, 5	;RP0=0, select bank0
  3410  054B  1303               	bcf	status, 6	;RP1=0, select bank0
  3411  054C  00A0               	movwf	((??___fttol+0)+0)
  3412  054D  0879               	movf	(___fttol@f1+1),w
  3413  054E  00A1               	movwf	((??___fttol+0)+0+1)
  3414  054F  087A               	movf	(___fttol@f1+2),w
  3415  0550  00A2               	movwf	((??___fttol+0)+0+2)
  3416  0551  1003               	clrc
  3417  0552  0D21               	rlf	(??___fttol+0)+1,w
  3418  0553  0D22               	rlf	(??___fttol+0)+2,w
  3419  0554  00A3               	movwf	(??___fttol+3)+0
  3420  0555  0823               	movf	(??___fttol+3)+0,w
  3421  0556  00A9               	movwf	(___fttol@exp1)
  3422  0557  08A9               	movf	((___fttol@exp1)),f
  3423  0558  1D03               	skipz
  3424  0559  2D5B               	goto	u1271
  3425  055A  2D5C               	goto	u1270
  3426  055B                     u1271:
  3427  055B  2D66               	goto	l1197
  3428  055C                     u1270:
  3429                           	line	50
  3430                           	
  3431  055C                     l1193:	
  3432  055C  3000               	movlw	0
  3433  055D  00FB               	movwf	(?___fttol+3)
  3434  055E  3000               	movlw	0
  3435  055F  00FA               	movwf	(?___fttol+2)
  3436  0560  3000               	movlw	0
  3437  0561  00F9               	movwf	(?___fttol+1)
  3438  0562  3000               	movlw	0
  3439  0563  00F8               	movwf	(?___fttol)
  3440                           
  3441  0564  2DEE               	goto	l335
  3442                           	
  3443  0565                     l1195:	
  3444  0565  2DEE               	goto	l335
  3445                           	
  3446  0566                     l334:	
  3447                           	line	51
  3448                           	
  3449  0566                     l1197:	
  3450  0566  0878               	movf	(___fttol@f1),w
  3451  0567  00A0               	movwf	((??___fttol+0)+0)
  3452  0568  0879               	movf	(___fttol@f1+1),w
  3453  0569  00A1               	movwf	((??___fttol+0)+0+1)
  3454  056A  087A               	movf	(___fttol@f1+2),w
  3455  056B  00A2               	movwf	((??___fttol+0)+0+2)
  3456  056C  3017               	movlw	017h
  3457  056D                     u1285:
  3458  056D  1003               	clrc
  3459  056E  0CA2               	rrf	(??___fttol+0)+2,f
  3460  056F  0CA1               	rrf	(??___fttol+0)+1,f
  3461  0570  0CA0               	rrf	(??___fttol+0)+0,f
  3462  0571                     u1280:
  3463  0571  3EFF               	addlw	-1
  3464  0572  1D03               	skipz
  3465  0573  2D6D               	goto	u1285
  3466  0574  0820               	movf	0+(??___fttol+0)+0,w
  3467  0575  00A3               	movwf	(??___fttol+3)+0
  3468  0576  0823               	movf	(??___fttol+3)+0,w
  3469  0577  00A4               	movwf	(___fttol@sign1)
  3470                           	line	52
  3471                           	
  3472  0578                     l1199:	
  3473  0578  17F9               	bsf	(___fttol@f1)+(15/8),(15)&7
  3474                           	line	53
  3475                           	
  3476  0579                     l1201:	
  3477  0579  30FF               	movlw	0FFh
  3478  057A  05F8               	andwf	(___fttol@f1),f
  3479  057B  30FF               	movlw	0FFh
  3480  057C  05F9               	andwf	(___fttol@f1+1),f
  3481  057D  3000               	movlw	0
  3482  057E  05FA               	andwf	(___fttol@f1+2),f
  3483                           	line	54
  3484                           	
  3485  057F                     l1203:	
  3486  057F  0878               	movf	(___fttol@f1),w
  3487  0580  00A5               	movwf	(___fttol@lval)
  3488  0581  0879               	movf	(___fttol@f1+1),w
  3489  0582  00A6               	movwf	((___fttol@lval))+1
  3490  0583  087A               	movf	(___fttol@f1+2),w
  3491  0584  00A7               	movwf	((___fttol@lval))+2
  3492  0585  01A8               	clrf	((___fttol@lval))+3
  3493                           	line	55
  3494                           	
  3495  0586                     l1205:	
  3496  0586  308E               	movlw	low(08Eh)
  3497  0587  02A9               	subwf	(___fttol@exp1),f
  3498                           	line	56
  3499                           	
  3500  0588                     l1207:	
  3501  0588  1FA9               	btfss	(___fttol@exp1),7
  3502  0589  2D8B               	goto	u1291
  3503  058A  2D8C               	goto	u1290
  3504  058B                     u1291:
  3505  058B  2DB1               	goto	l1217
  3506  058C                     u1290:
  3507                           	line	57
  3508                           	
  3509  058C                     l1209:	
  3510  058C  0829               	movf	(___fttol@exp1),w
  3511  058D  3A80               	xorlw	80h
  3512  058E  3E8F               	addlw	-((-15)^80h)
  3513  058F  1803               	skipnc
  3514  0590  2D92               	goto	u1301
  3515  0591  2D93               	goto	u1300
  3516  0592                     u1301:
  3517  0592  2D9E               	goto	l1215
  3518  0593                     u1300:
  3519                           	line	58
  3520                           	
  3521  0593                     l1211:	
  3522  0593  3000               	movlw	0
  3523  0594  00FB               	movwf	(?___fttol+3)
  3524  0595  3000               	movlw	0
  3525  0596  00FA               	movwf	(?___fttol+2)
  3526  0597  3000               	movlw	0
  3527  0598  00F9               	movwf	(?___fttol+1)
  3528  0599  3000               	movlw	0
  3529  059A  00F8               	movwf	(?___fttol)
  3530                           
  3531  059B  2DEE               	goto	l335
  3532                           	
  3533  059C                     l1213:	
  3534  059C  2DEE               	goto	l335
  3535                           	
  3536  059D                     l337:	
  3537  059D  2D9E               	goto	l1215
  3538                           	line	59
  3539                           	
  3540  059E                     l338:	
  3541                           	line	60
  3542                           	
  3543  059E                     l1215:	
  3544  059E  3001               	movlw	01h
  3545  059F                     u1315:
  3546  059F  1003               	clrc
  3547  05A0  0CA8               	rrf	(___fttol@lval+3),f
  3548  05A1  0CA7               	rrf	(___fttol@lval+2),f
  3549  05A2  0CA6               	rrf	(___fttol@lval+1),f
  3550  05A3  0CA5               	rrf	(___fttol@lval),f
  3551  05A4  3EFF               	addlw	-1
  3552  05A5  1D03               	skipz
  3553  05A6  2D9F               	goto	u1315
  3554                           
  3555                           	line	61
  3556  05A7  3001               	movlw	(01h)
  3557  05A8  00A0               	movwf	(??___fttol+0)+0
  3558  05A9  0820               	movf	(??___fttol+0)+0,w
  3559  05AA  07A9               	addwf	(___fttol@exp1),f
  3560  05AB  1D03               	btfss	status,2
  3561  05AC  2DAE               	goto	u1321
  3562  05AD  2DAF               	goto	u1320
  3563  05AE                     u1321:
  3564  05AE  2D9E               	goto	l1215
  3565  05AF                     u1320:
  3566  05AF  2DD5               	goto	l1227
  3567                           	
  3568  05B0                     l339:	
  3569                           	line	62
  3570  05B0  2DD5               	goto	l1227
  3571                           	
  3572  05B1                     l336:	
  3573                           	line	63
  3574                           	
  3575  05B1                     l1217:	
  3576  05B1  3018               	movlw	(018h)
  3577  05B2  0229               	subwf	(___fttol@exp1),w
  3578  05B3  1C03               	skipc
  3579  05B4  2DB6               	goto	u1331
  3580  05B5  2DB7               	goto	u1330
  3581  05B6                     u1331:
  3582  05B6  2DCE               	goto	l1225
  3583  05B7                     u1330:
  3584                           	line	64
  3585                           	
  3586  05B7                     l1219:	
  3587  05B7  3000               	movlw	0
  3588  05B8  00FB               	movwf	(?___fttol+3)
  3589  05B9  3000               	movlw	0
  3590  05BA  00FA               	movwf	(?___fttol+2)
  3591  05BB  3000               	movlw	0
  3592  05BC  00F9               	movwf	(?___fttol+1)
  3593  05BD  3000               	movlw	0
  3594  05BE  00F8               	movwf	(?___fttol)
  3595                           
  3596  05BF  2DEE               	goto	l335
  3597                           	
  3598  05C0                     l1221:	
  3599  05C0  2DEE               	goto	l335
  3600                           	
  3601  05C1                     l341:	
  3602                           	line	65
  3603  05C1  2DCE               	goto	l1225
  3604                           	
  3605  05C2                     l343:	
  3606                           	line	66
  3607                           	
  3608  05C2                     l1223:	
  3609  05C2  3001               	movlw	01h
  3610  05C3  00A0               	movwf	(??___fttol+0)+0
  3611  05C4                     u1345:
  3612  05C4  1003               	clrc
  3613  05C5  0DA5               	rlf	(___fttol@lval),f
  3614  05C6  0DA6               	rlf	(___fttol@lval+1),f
  3615  05C7  0DA7               	rlf	(___fttol@lval+2),f
  3616  05C8  0DA8               	rlf	(___fttol@lval+3),f
  3617  05C9  0BA0               	decfsz	(??___fttol+0)+0
  3618  05CA  2DC4               	goto	u1345
  3619                           	line	67
  3620  05CB  3001               	movlw	low(01h)
  3621  05CC  02A9               	subwf	(___fttol@exp1),f
  3622  05CD  2DCE               	goto	l1225
  3623                           	line	68
  3624                           	
  3625  05CE                     l342:	
  3626                           	line	65
  3627                           	
  3628  05CE                     l1225:	
  3629  05CE  08A9               	movf	(___fttol@exp1),f
  3630  05CF  1D03               	skipz
  3631  05D0  2DD2               	goto	u1351
  3632  05D1  2DD3               	goto	u1350
  3633  05D2                     u1351:
  3634  05D2  2DC2               	goto	l1223
  3635  05D3                     u1350:
  3636  05D3  2DD5               	goto	l1227
  3637                           	
  3638  05D4                     l344:	
  3639  05D4  2DD5               	goto	l1227
  3640                           	line	69
  3641                           	
  3642  05D5                     l340:	
  3643                           	line	70
  3644                           	
  3645  05D5                     l1227:	
  3646  05D5  0824               	movf	(___fttol@sign1),w
  3647  05D6  1D03               	skipz
  3648  05D7  2DD9               	goto	u1360
  3649  05D8  2DE5               	goto	l1231
  3650  05D9                     u1360:
  3651                           	line	71
  3652                           	
  3653  05D9                     l1229:	
  3654  05D9  09A5               	comf	(___fttol@lval),f
  3655  05DA  09A6               	comf	(___fttol@lval+1),f
  3656  05DB  09A7               	comf	(___fttol@lval+2),f
  3657  05DC  09A8               	comf	(___fttol@lval+3),f
  3658  05DD  0AA5               	incf	(___fttol@lval),f
  3659  05DE  1903               	skipnz
  3660  05DF  0AA6               	incf	(___fttol@lval+1),f
  3661  05E0  1903               	skipnz
  3662  05E1  0AA7               	incf	(___fttol@lval+2),f
  3663  05E2  1903               	skipnz
  3664  05E3  0AA8               	incf	(___fttol@lval+3),f
  3665  05E4  2DE5               	goto	l1231
  3666                           	
  3667  05E5                     l345:	
  3668                           	line	72
  3669                           	
  3670  05E5                     l1231:	
  3671  05E5  0828               	movf	(___fttol@lval+3),w
  3672  05E6  00FB               	movwf	(?___fttol+3)
  3673  05E7  0827               	movf	(___fttol@lval+2),w
  3674  05E8  00FA               	movwf	(?___fttol+2)
  3675  05E9  0826               	movf	(___fttol@lval+1),w
  3676  05EA  00F9               	movwf	(?___fttol+1)
  3677  05EB  0825               	movf	(___fttol@lval),w
  3678  05EC  00F8               	movwf	(?___fttol)
  3679                           
  3680  05ED  2DEE               	goto	l335
  3681                           	
  3682  05EE                     l1233:	
  3683                           	line	73
  3684                           	
  3685  05EE                     l335:	
  3686  05EE  0008               	return
  3687                           	opt stack 0
  3688                           GLOBAL	__end_of___fttol
  3689  05EF                     	__end_of___fttol:
  3690                           	signat	___fttol,4220
  3691                           	global	___lwtoft
  3692                           
  3693 ;; *************** function ___lwtoft *****************
  3694 ;; Defined at:
  3695 ;;		line 29 in file "C:\Program Files (x86)\Microchip\xc8\v1.00\sources\lwtoft.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;  c               2   10[BANK0 ] unsigned int 
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  3   10[BANK0 ] float 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0, pclath, cstack
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         0       3       0       0       0
  3710 ;;      Locals:         0       0       0       0       0
  3711 ;;      Temps:          1       0       0       0       0
  3712 ;;      Totals:         1       3       0       0       0
  3713 ;;Total ram usage:        4 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    1
  3716 ;; This function calls:
  3717 ;;		___ftpack
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           psect	text396,local,class=CODE,delta=2,merge=1
  3723                           global __ptext396
  3724  02A9                     __ptext396:
  3725                           psect	text396
  3726                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.00\sources\lwtoft.c"
  3727                           	line	29
  3728                           	global	__size_of___lwtoft
  3729  001B                     	__size_of___lwtoft	equ	__end_of___lwtoft-___lwtoft
  3730                           	
  3731  02A9                     ___lwtoft:	
  3732                           	opt	stack 6
  3733                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  3734                           	line	30
  3735                           	
  3736  02A9                     l1235:	
  3737  02A9  1283               	bcf	status, 5	;RP0=0, select bank0
  3738  02AA  1303               	bcf	status, 6	;RP1=0, select bank0
  3739  02AB  082A               	movf	(___lwtoft@c),w
  3740  02AC  00F0               	movwf	(?___ftpack)
  3741  02AD  082B               	movf	(___lwtoft@c+1),w
  3742  02AE  00F1               	movwf	(?___ftpack+1)
  3743  02AF  01F2               	clrf	(?___ftpack+2)
  3744  02B0  308E               	movlw	(08Eh)
  3745  02B1  00FC               	movwf	(??___lwtoft+0)+0
  3746  02B2  087C               	movf	(??___lwtoft+0)+0,w
  3747  02B3  00F3               	movwf	0+(?___ftpack)+03h
  3748  02B4  01F4               	clrf	0+(?___ftpack)+04h
  3749  02B5  120A  118A  23A7   	fcall	___ftpack
              120A  118A         
  3750  02BA  0870               	movf	(0+(?___ftpack)),w
  3751  02BB  1283               	bcf	status, 5	;RP0=0, select bank0
  3752  02BC  1303               	bcf	status, 6	;RP1=0, select bank0
  3753  02BD  00AA               	movwf	(?___lwtoft)
  3754  02BE  0871               	movf	(1+(?___ftpack)),w
  3755  02BF  00AB               	movwf	(?___lwtoft+1)
  3756  02C0  0872               	movf	(2+(?___ftpack)),w
  3757  02C1  00AC               	movwf	(?___lwtoft+2)
  3758  02C2  2AC3               	goto	l448
  3759                           	
  3760  02C3                     l1237:	
  3761                           	line	31
  3762                           	
  3763  02C3                     l448:	
  3764  02C3  0008               	return
  3765                           	opt stack 0
  3766                           GLOBAL	__end_of___lwtoft
  3767  02C4                     	__end_of___lwtoft:
  3768                           	signat	___lwtoft,4219
  3769                           	global	___ftpack
  3770                           
  3771 ;; *************** function ___ftpack *****************
  3772 ;; Defined at:
  3773 ;;		line 63 in file "C:\Program Files (x86)\Microchip\xc8\v1.00\sources\float.c"
  3774 ;; Parameters:    Size  Location     Type
  3775 ;;  arg             3    0[COMMON] unsigned um
  3776 ;;  exp             1    3[COMMON] unsigned char 
  3777 ;;  sign            1    4[COMMON] unsigned char 
  3778 ;; Auto vars:     Size  Location     Type
  3779 ;;		None
  3780 ;; Return value:  Size  Location     Type
  3781 ;;                  3    0[COMMON] float 
  3782 ;; Registers used:
  3783 ;;		wreg, status,2, status,0
  3784 ;; Tracked objects:
  3785 ;;		On entry : 0/0
  3786 ;;		On exit  : 0/0
  3787 ;;		Unchanged: 0/0
  3788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3789 ;;      Params:         5       0       0       0       0
  3790 ;;      Locals:         0       0       0       0       0
  3791 ;;      Temps:          3       0       0       0       0
  3792 ;;      Totals:         8       0       0       0       0
  3793 ;;Total ram usage:        8 bytes
  3794 ;; Hardware stack levels used:    1
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		___ftmul
  3799 ;;		___lwtoft
  3800 ;; This function uses a non-reentrant model
  3801 ;;
  3802                           psect	text397,local,class=CODE,delta=2,merge=1
  3803                           global __ptext397
  3804  03A7                     __ptext397:
  3805                           psect	text397
  3806                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.00\sources\float.c"
  3807                           	line	63
  3808                           	global	__size_of___ftpack
  3809  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  3810                           	
  3811  03A7                     ___ftpack:	
  3812                           	opt	stack 6
  3813                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3814                           	line	64
  3815                           	
  3816  03A7                     l1121:	
  3817  03A7  0873               	movf	(___ftpack@exp),w
  3818  03A8  1D03               	skipz
  3819  03A9  2BAB               	goto	u920
  3820  03AA  2BB3               	goto	l1125
  3821  03AB                     u920:
  3822                           	
  3823  03AB                     l1123:	
  3824  03AB  0872               	movf	(___ftpack@arg+2),w
  3825  03AC  0471               	iorwf	(___ftpack@arg+1),w
  3826  03AD  0470               	iorwf	(___ftpack@arg),w
  3827  03AE  1D03               	skipz
  3828  03AF  2BB1               	goto	u931
  3829  03B0  2BB2               	goto	u930
  3830  03B1                     u931:
  3831  03B1  2BC9               	goto	l1131
  3832  03B2                     u930:
  3833  03B2  2BB3               	goto	l1125
  3834                           	
  3835  03B3                     l559:	
  3836                           	line	65
  3837                           	
  3838  03B3                     l1125:	
  3839  03B3  3000               	movlw	0x0
  3840  03B4  00F0               	movwf	(?___ftpack)
  3841  03B5  3000               	movlw	0x0
  3842  03B6  00F1               	movwf	(?___ftpack+1)
  3843  03B7  3000               	movlw	0x0
  3844  03B8  00F2               	movwf	(?___ftpack+2)
  3845  03B9  2C21               	goto	l560
  3846                           	
  3847  03BA                     l1127:	
  3848  03BA  2C21               	goto	l560
  3849                           	
  3850  03BB                     l557:	
  3851                           	line	66
  3852  03BB  2BC9               	goto	l1131
  3853                           	
  3854  03BC                     l562:	
  3855                           	line	67
  3856                           	
  3857  03BC                     l1129:	
  3858  03BC  3001               	movlw	(01h)
  3859  03BD  00F5               	movwf	(??___ftpack+0)+0
  3860  03BE  0875               	movf	(??___ftpack+0)+0,w
  3861  03BF  07F3               	addwf	(___ftpack@exp),f
  3862                           	line	68
  3863  03C0  3001               	movlw	01h
  3864  03C1                     u945:
  3865  03C1  1003               	clrc
  3866  03C2  0CF2               	rrf	(___ftpack@arg+2),f
  3867  03C3  0CF1               	rrf	(___ftpack@arg+1),f
  3868  03C4  0CF0               	rrf	(___ftpack@arg),f
  3869  03C5  3EFF               	addlw	-1
  3870  03C6  1D03               	skipz
  3871  03C7  2BC1               	goto	u945
  3872                           
  3873  03C8  2BC9               	goto	l1131
  3874                           	line	69
  3875                           	
  3876  03C9                     l561:	
  3877                           	line	66
  3878                           	
  3879  03C9                     l1131:	
  3880  03C9  30FE               	movlw	low highword(0FE0000h)
  3881  03CA  0572               	andwf	(___ftpack@arg+2),w
  3882  03CB  1D03               	btfss	status,2
  3883  03CC  2BCE               	goto	u951
  3884  03CD  2BCF               	goto	u950
  3885  03CE                     u951:
  3886  03CE  2BBC               	goto	l1129
  3887  03CF                     u950:
  3888  03CF  2BE7               	goto	l564
  3889                           	
  3890  03D0                     l563:	
  3891                           	line	70
  3892  03D0  2BE7               	goto	l564
  3893                           	
  3894  03D1                     l565:	
  3895                           	line	71
  3896                           	
  3897  03D1                     l1133:	
  3898  03D1  3001               	movlw	(01h)
  3899  03D2  00F5               	movwf	(??___ftpack+0)+0
  3900  03D3  0875               	movf	(??___ftpack+0)+0,w
  3901  03D4  07F3               	addwf	(___ftpack@exp),f
  3902                           	line	72
  3903                           	
  3904  03D5                     l1135:	
  3905  03D5  3001               	movlw	01h
  3906  03D6  07F0               	addwf	(___ftpack@arg),f
  3907  03D7  3000               	movlw	0
  3908  03D8  1803               	skipnc
  3909  03D9  3001               movlw 1
  3910  03DA  07F1               	addwf	(___ftpack@arg+1),f
  3911  03DB  3000               	movlw	0
  3912  03DC  1803               	skipnc
  3913  03DD  3001               movlw 1
  3914  03DE  07F2               	addwf	(___ftpack@arg+2),f
  3915                           	line	73
  3916                           	
  3917  03DF                     l1137:	
  3918  03DF  3001               	movlw	01h
  3919  03E0                     u965:
  3920  03E0  1003               	clrc
  3921  03E1  0CF2               	rrf	(___ftpack@arg+2),f
  3922  03E2  0CF1               	rrf	(___ftpack@arg+1),f
  3923  03E3  0CF0               	rrf	(___ftpack@arg),f
  3924  03E4  3EFF               	addlw	-1
  3925  03E5  1D03               	skipz
  3926  03E6  2BE0               	goto	u965
  3927                           
  3928                           	line	74
  3929                           	
  3930  03E7                     l564:	
  3931                           	line	70
  3932  03E7  30FF               	movlw	low highword(0FF0000h)
  3933  03E8  0572               	andwf	(___ftpack@arg+2),w
  3934  03E9  1D03               	btfss	status,2
  3935  03EA  2BEC               	goto	u971
  3936  03EB  2BED               	goto	u970
  3937  03EC                     u971:
  3938  03EC  2BD1               	goto	l1133
  3939  03ED                     u970:
  3940  03ED  2BFA               	goto	l1141
  3941                           	
  3942  03EE                     l566:	
  3943                           	line	75
  3944  03EE  2BFA               	goto	l1141
  3945                           	
  3946  03EF                     l568:	
  3947                           	line	76
  3948                           	
  3949  03EF                     l1139:	
  3950  03EF  3001               	movlw	low(01h)
  3951  03F0  02F3               	subwf	(___ftpack@exp),f
  3952                           	line	77
  3953  03F1  3001               	movlw	01h
  3954  03F2                     u985:
  3955  03F2  1003               	clrc
  3956  03F3  0DF0               	rlf	(___ftpack@arg),f
  3957  03F4  0DF1               	rlf	(___ftpack@arg+1),f
  3958  03F5  0DF2               	rlf	(___ftpack@arg+2),f
  3959  03F6  3EFF               	addlw	-1
  3960  03F7  1D03               	skipz
  3961  03F8  2BF2               	goto	u985
  3962  03F9  2BFA               	goto	l1141
  3963                           	line	78
  3964                           	
  3965  03FA                     l567:	
  3966                           	line	75
  3967                           	
  3968  03FA                     l1141:	
  3969  03FA  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  3970  03FB  2BFD               	goto	u991
  3971  03FC  2BFE               	goto	u990
  3972  03FD                     u991:
  3973  03FD  2BEF               	goto	l1139
  3974  03FE                     u990:
  3975                           	
  3976  03FE                     l569:	
  3977                           	line	79
  3978  03FE  1873               	btfsc	(___ftpack@exp),(0)&7
  3979  03FF  2C01               	goto	u1001
  3980  0400  2C02               	goto	u1000
  3981  0401                     u1001:
  3982  0401  2C08               	goto	l570
  3983  0402                     u1000:
  3984                           	line	80
  3985                           	
  3986  0402                     l1143:	
  3987  0402  30FF               	movlw	0FFh
  3988  0403  05F0               	andwf	(___ftpack@arg),f
  3989  0404  307F               	movlw	07Fh
  3990  0405  05F1               	andwf	(___ftpack@arg+1),f
  3991  0406  30FF               	movlw	0FFh
  3992  0407  05F2               	andwf	(___ftpack@arg+2),f
  3993                           	
  3994  0408                     l570:	
  3995                           	line	81
  3996  0408  1003               	clrc
  3997  0409  0CF3               	rrf	(___ftpack@exp),f
  3998                           
  3999                           	line	82
  4000                           	
  4001  040A                     l1145:	
  4002  040A  0873               	movf	(___ftpack@exp),w
  4003  040B  00F5               	movwf	((??___ftpack+0)+0)
  4004  040C  01F6               	clrf	((??___ftpack+0)+0+1)
  4005  040D  01F7               	clrf	((??___ftpack+0)+0+2)
  4006  040E  3010               	movlw	010h
  4007  040F                     u1015:
  4008  040F  1003               	clrc
  4009  0410  0DF5               	rlf	(??___ftpack+0)+0,f
  4010  0411  0DF6               	rlf	(??___ftpack+0)+1,f
  4011  0412  0DF7               	rlf	(??___ftpack+0)+2,f
  4012  0413                     u1010:
  4013  0413  3EFF               	addlw	-1
  4014  0414  1D03               	skipz
  4015  0415  2C0F               	goto	u1015
  4016  0416  0875               	movf	0+(??___ftpack+0)+0,w
  4017  0417  04F0               	iorwf	(___ftpack@arg),f
  4018  0418  0876               	movf	1+(??___ftpack+0)+0,w
  4019  0419  04F1               	iorwf	(___ftpack@arg+1),f
  4020  041A  0877               	movf	2+(??___ftpack+0)+0,w
  4021  041B  04F2               	iorwf	(___ftpack@arg+2),f
  4022                           	line	83
  4023                           	
  4024  041C                     l1147:	
  4025  041C  0874               	movf	(___ftpack@sign),w
  4026  041D  1D03               	skipz
  4027  041E  2C20               	goto	u1020
  4028  041F  2C21               	goto	l571
  4029  0420                     u1020:
  4030                           	line	84
  4031                           	
  4032  0420                     l1149:	
  4033  0420  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  4034                           	
  4035  0421                     l571:	
  4036                           	line	85
  4037                           	line	86
  4038                           	
  4039  0421                     l560:	
  4040  0421  0008               	return
  4041                           	opt stack 0
  4042                           GLOBAL	__end_of___ftpack
  4043  0422                     	__end_of___ftpack:
  4044                           	signat	___ftpack,12411
  4045                           psect	text398,local,class=CODE,delta=2,merge=1
  4046                           global __ptext398
  4047  0000                     __ptext398:
  4048                           	global	btemp
  4049  007E                     	btemp set 07Eh
  4050                           
  4051                           	DABS	1,126,2	;btemp
  4052                           	global	wtemp0
  4053  007E                     	wtemp0 set btemp


Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    ?___ftpack	float  size(1) Largest target is 0

    ?___fttol	long  size(1) Largest target is 0

    ?___lwmod	unsigned int  size(1) Largest target is 0

    ?___ftmul	float  size(1) Largest target is 0

    ?___lwtoft	float  size(1) Largest target is 0

    ?___lwdiv	unsigned int  size(1) Largest target is 0

    ?_ui_adc_read	unsigned int  size(1) Largest target is 0

    LCD_putstr@csz_string	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->___lwtoft
    _LCD_putstr->_LCD_senddata
    _LCD_putchar->_LCD_senddata
    _LCD_senddata->_LCD_4bitsend
    _LCD_goto->_LCD_command
    _initialize->_LCD_initialize
    _LCD_initialize->_LCD_command
    _LCD_clear->_LCD_command
    _LCD_command->_LCD_4bitsend
    ___ftmul->___lwtoft
    ___fttol->___ftpack
    ___lwtoft->___fttol

Critical Paths under _main in BANK0

    _main->___ftmul
    ___ftmul->___lwtoft
    ___lwtoft->___fttol

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    2856
                                             13 COMMON     1     1      0
                                             29 BANK0     13    13      0
                         _initialize
                         _LCD_putstr
                             _adc_on
                        _ui_adc_read
                            ___lwdiv
                           ___lwtoft
                            ___ftmul
                            ___fttol
                            ___lwmod
                           _LCD_goto
                        _LCD_putchar
                            _adc_off
 ---------------------------------------------------------------------------------
 (1) _adc_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ui_adc_read                                          6     4      2      47
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _LCD_putstr                                           2     2      0     243
                                              3 COMMON     2     2      0
                       _LCD_senddata
 ---------------------------------------------------------------------------------
 (1) _LCD_putchar                                          1     1      0     220
                                              3 COMMON     1     1      0
                       _LCD_senddata
 ---------------------------------------------------------------------------------
 (2) _LCD_senddata                                         1     1      0     198
                                              2 COMMON     1     1      0
                       _LCD_4bitsend
 ---------------------------------------------------------------------------------
 (1) _LCD_goto                                             2     1      1     264
                                              3 COMMON     2     1      1
                        _LCD_command
 ---------------------------------------------------------------------------------
 (1) _initialize                                           2     2      0     396
                                              5 COMMON     2     2      0
                     _adc_initialize
                     _LCD_initialize
                          _LCD_clear
 ---------------------------------------------------------------------------------
 (2) _adc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_initialize                                       2     2      0     198
                                              3 COMMON     2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_clear                                            0     0      0     198
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          1     1      0     198
                                              2 COMMON     1     1      0
                       _LCD_4bitsend
 ---------------------------------------------------------------------------------
 (3) _LCD_4bitsend                                         2     2      0     176
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     162
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     159
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             16    10      6     535
                                             13 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             14    10      4     252
                                              8 COMMON     4     0      4
                                              0 BANK0     10    10      0
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3     231
                                             12 COMMON     1     1      0
                                             10 BANK0      3     0      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5     209
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialize
     _adc_initialize
     _LCD_initialize
       _LCD_command
         _LCD_4bitsend
     _LCD_clear
       _LCD_command
         _LCD_4bitsend
   _LCD_putstr
     _LCD_senddata
       _LCD_4bitsend
   _adc_on
   _ui_adc_read
   ___lwdiv
   ___lwtoft
     ___ftpack
     ___fttol (ARG)
       ___ftpack (ARG)
   ___ftmul
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
     ___fttol (ARG)
       ___ftpack (ARG)
   ___fttol
     ___ftpack (ARG)
   ___lwmod
   _LCD_goto
     _LCD_command
       _LCD_4bitsend
   _LCD_putchar
     _LCD_senddata
       _LCD_4bitsend
   _adc_off

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       4       2        0.0%
ABS                  0      0      3C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2A      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      40      12        0.0%


HI-TECH Software PICC Macro Assembler V1.00 build 12136 
Symbol Table                                                                                   Sun Aug 05 14:29:12 2012

         ui_adc_read@ohm 0074                        pc 0002                       l41 0236  
                     l35 0279                       l44 02F5                       l45 02F5  
                     l46 02FA                       l38 023A                       l47 0314  
                     l72 04A8                       l80 02E4                       l81 02E4  
                     l66 025C                       l90 0288                       l91 0290  
                     l75 0267                       l92 0290                       l84 0249  
                     l69 0548                       l78 02D7                       l87 0241  
                     l79 02C6                       _GO 00FA                       fsr 0004  
                    l121 06F8                      l130 07FC                      l122 0709  
                    l131 07FC                      l123 0728                      l132 07FD  
                    l133 07FD                      l126 0788                      l231 039F  
                    l127 07CD                      l232 0371                      l136 02A8  
                    l128 07F6                      l241 0351                      l233 0365  
                    l129 07F7                      l330 06A9                      l242 032B  
                    l234 0376                      l331 06C0                      l323 060A  
                    l243 031F                      l235 0377                      l340 05D5  
                    l324 06DC                      l244 0330                      l236 0390  
                    l341 05C1                      l325 0623                      l245 0331  
                    l237 039E                      l342 05CE                      l334 0566  
                    l326 0663                      l246 0342                      l238 03A6  
                    l343 05C2                      l335 05EE                      l327 0678  
                    l247 0350                      l344 05D4                      l336 05B1  
                    l328 068F                      l248 0358                      l345 05E5  
                    l337 059D                      l329 0694                      l338 059E  
                    l339 05B0                      l560 0421                      l448 02C3  
                    l561 03C9                      l570 0408                      l562 03BC  
                    l571 0421                      l563 03D0                      l564 03E7  
                    l565 03D1                      l557 03BB                      l566 03EE  
                    l567 03FA                      l559 03B3                      l568 03EF  
                    l569 03FE                      _RB2 0032                      _RB3 0033  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _RB7 0037                      u810 0375                      u811 0374  
                    u805 0366                      u910 034F                      u830 0388  
                    u911 034E                      u831 0387                      u920 03AB  
                    u905 0343                      u825 0378                      u930 03B2  
                    u850 039D                      u931 03B1                      u851 039C  
                    u835 0384                      u860 031B                      u861 031A  
                    u845 0391                      u950 03CF                      u790 0361  
                    u951 03CE                      u791 0360                      u880 032F  
                    u945 03C1                      u881 032E                      u970 03ED  
                    u890 033B                      u971 03EC                      u891 033A  
                    u875 0320                      u965 03E0                      u990 03FE  
                    u991 03FD                      u895 0337                      u985 03F2  
                    fsr0 0004                      indf 0000              ?_LCD_putstr 0070  
         ??_LCD_4bitsend 0070                     l1101 031B                     l1111 033B  
                   l1103 031F                     l1121 03A7                     l1201 0579  
                   l1113 0342                     l1105 0326                     l1131 03C9  
                   l1123 03AB                     l1211 0593                     l1203 057F  
                   l1115 0349                     l1107 032B                     l1141 03FA  
                   l1133 03D1                     l1125 03B3                     l1221 05C0  
                   l1213 059C                     l1205 0586                     l1109 0331  
                   l1117 0351                     l1301 0437                     l1143 0402  
                   l1135 03D5                     l1127 03BA                     l1231 05E5  
                   l1223 05C2                     l1215 059E                     l1207 0588  
                   l1119 0358                     l1311 043E                     l1303 043A  
                   l1151 02E5                     l1071 0233                     l1145 040A  
                   l1137 03DF                     l1129 03BC                     l1233 05EE  
                   l1225 05CE                     l1209 058C                     l1217 05B1  
                   l1081 036C                     l1073 0359                     l1241 0256  
                   l1321 044C                     l1313 043F                     l1305 043B  
                   l1161 02F1                     l1153 02E7                     l1401 0708  
                   l1147 041C                     l1139 03EF                     l1235 02A9  
                   l1219 05B7                     l1227 05D5                     l1251 0609  
                   l1091 0390                     l1083 0371                     l1075 035B  
                   l1171 04AA                     l1331 0463                     l1323 044D  
                   l1315 0447                     l1307 043C                     l1067 0268  
                   l1243 025E                     l1163 02FA                     l1155 02EA  
                   l1411 0772                     l1403 0709                     l1149 0420  
                   l1237 02C3                     l1229 05D9                     l1261 0650  
                   l1253 060A                     l1093 0397                     l1085 0377  
                   l1077 0361                     l1181 050F                     l1173 04F2  
                   l1341 0478                     l1333 0464                     l1325 044E  
                   l1317 044A                     l1309 043D                     l1245 0261  
                   l1165 0304                     l1157 02EB                     l1069 0237  
                   l1421 0788                     l1413 077A                     l1405 0718  
                   l1191 0549                     l1271 0663                     l1263 0651  
                   l1255 061B                     l1247 05EF                     l1087 0388  
                   l1079 0365                     l1095 039F                     l1183 0521  
                   l1175 04F3                     l1239 0253                     l1351 0486  
                   l1343 047B                     l1335 0465                     l1327 0456  
                   l1319 044B                     l1167 030D                     l1159 02EC  
                   l1431 07F7                     l1423 07B4                     l1415 077B  
                   l1407 071E                     l1193 055C                     l1281 068F  
                   l1273 0667                     l1265 0652                     l1257 0622  
                   l1249 0602                     l1097 03A6                     l1089 038E  
                   l1185 0533                     l1177 04FA                     l1353 0490  
                   l1345 047C                     l1337 0466                     l1329 0460  
                   l1361 02C5                     l1169 0314                     l1425 07BD  
                   l1417 077D                     l1409 0728                     l1195 0565  
                   l1291 06B9                     l1283 0694                     l1275 0678  
                   l1267 0658                     l1259 0623                     l1099 0315  
                   l1187 053D                     l1179 04FD                     l1371 023B  
                   l1355 0496                     l1347 047D                     l1339 046E  
                   l1363 02C6                     l1427 07C3                     l1419 0787  
                   l1197 0566                     l1293 06C0                     l1285 0698  
                   l1277 0680                     l1269 065E                     l1189 0545  
                   l1357 049C                     l1349 047E                     l1381 0296  
                   l1373 027B                     l1365 02D2                     l1429 07CD  
                   l1199 0578                     l1295 06DC                     l1287 06A9  
                   l1279 0688                     l1359 04A2                     l1375 0280  
                   l1367 02D7                     l1391 06ED                     l1383 06DD  
                   l1289 06B1                     l1297 0422                     l1377 0288  
                   l1369 0243                     l1393 06F2                     l1385 06E0  
                   l1299 042B                     l1379 0291                     l1395 06F8  
                   l1387 06E2                     l1397 06FC                     l1389 06E7  
                   l1399 06FE                     _ADFM 04FF                     _ADON 00F8  
                   _CHS0 00FB                     _CHS1 00FC                     _CHS2 00FD  
                   STR_1 0009             ?_LCD_command 0070                     u1000 0402  
                   u1001 0401                     u1010 0413                     u1020 0420  
                   u1110 04DD                     u1030 02F9                     u1015 040F  
                   u1111 04D9                     u1031 02F8                     u1200 051E  
                   u1201 051A                     u1105 04D1                     u1050 04B9  
                   u1051 04B5                     u1300 0593                     u1140 04EF  
                   u1124 04E0                     u1301 0592                     u1141 04EB  
                   u1045 04AD                     u1230 0530                     u1214 0521  
                   u1231 052C                     u1135 04E3                     u1320 05AF  
                   u1400 0645                     u1080 04CB                     u1064 04BC  
                   u1321 05AE                     u1225 0524                     u1081 04C7  
                   u1330 05B7                     u1410 0667                     u1250 053A  
                   u1170 050C                     u1154 04F2                     u1331 05B6  
                   u1315 059F                     u1411 0666                     u1251 0536  
                   u1171 0508                     u1075 04BF                     u1500 06BF  
                   u1244 0533                     u1501 06BE                     u1421 0670  
                   u1405 0641                     u1165 0500                     u1350 05D3  
                   u1270 055C                     u1422 0677                     u1094 04CE  
                   u1510 02E3                     u1351 05D2                     u1271 055B  
                   u1511 02E2                     u1360 05D9                     u1280 0571  
                   u1264 053D                     u1184 050F                     u1520 0280  
                   u1345 05C4                     u1521 027F                     u1290 058C  
                   u1450 068E                     u1370 0602                     u1530 0707  
                   u1291 058B                     u1451 068D                     u1435 0679  
                   u1371 0601                     u1195 0512                     u1531 0706  
                   u1460 0698                     u1380 061B                     u1540 0727  
                   u1285 056D                     u1461 0697                     u1445 0681  
                   u1381 061A                     u1541 0726                     u1390 0633  
                   u1550 0786                     u1471 06A1                     u1607 0426  
                   u1551 0785                     u1472 06A8                     u1560 07CC  
                   u1617 0432                     u1561 07CB                     u1395 062F  
                   u1707 0540                     u1627 0442                     u1485 06AA  
                   u1637 0451                     u1495 06B2                     u1647 045B  
                   u1657 0469                     u1577 06F4                     u1667 0473  
                   u1587 02EE                     u1677 0481                     u1597 029A  
                   u1687 048B                     u1697 04F5                     _main 06DD  
           ___ftpack@arg 0070             ___ftpack@exp 0073                     btemp 007E  
                   start 0000             ?_LCD_putchar 0070       __size_of_LCD_clear 0007  
            main@voltage 0044           LCD_goto@column 0073             ___ftmul@cntr 003B  
           ___ftmul@sign 003C             ___fttol@exp1 0029             ___fttol@lval 0025  
__size_of_LCD_initialize 0087         __end_of_LCD_goto 0291                    _ADCS0 00FE  
                  _ADCS1 00FF                    _ADCS2 04FE                    ?_main 0070  
        __end_of___ftmul 06DD          __end_of___fttol 05EF          __end_of_adc_off 0237  
                  _PCFG0 04F8                    _PCFG1 04F9                    _PCFG2 04FA  
                  _PCFG3 04FB          __end_of___lwdiv 03A7          __end_of___lwmod 0359  
                  _TRISB 0086            ___ftpack@sign 0074                    main@i 0042  
                  main@j 0046            ?_LCD_senddata 0070                    pclath 000A  
                  status 0003                    wtemp0 007E              LCD_goto@row 0074  
    __size_of_LCD_putstr 0021             __end_of_main 0800                   ??_main 007D  
          ___fttol@sign1 0024        __end_of_LCD_clear 0242             ?_ui_adc_read 0070  
         ??_LCD_senddata 0072                   _ADRESH 001E                   _ADRESL 009E  
       __end_of___ftpack 0422         __end_of___lwtoft 02C4                   _TRISA0 0428  
                 _adc_on 0237            main@remainder 0041  __size_of_adc_initialize 0012  
              ??___ftmul 0033                ??___fttol 0020                ??_adc_off 0070  
              ??___lwdiv 0074                ??___lwmod 0074     __end_of_LCD_4bitsend 0549  
      LCD_putchar@c_data 0073    ___ftmul@f3_as_product 0038     __size_of_LCD_command 000B  
              ?_LCD_goto 0073               ___ftmul@f1 002D               ___ftmul@f2 0030  
             ___fttol@f1 0078           __pcstackCOMMON 0070     __size_of_LCD_putchar 0008  
         _LCD_initialize 0422               ___lwtoft@c 002A             ??_LCD_putstr 0073  
             __pbssBANK0 004A               ??_LCD_goto 0074               __pmaintext 06DD  
 __end_of_LCD_initialize 04A9          LCD_senddata@var 0072                  ?_adc_on 0070  
     __end_of_LCD_putstr 02E5     __end_of_LCD_senddata 0268                ?___ftpack 0070  
              ?___lwtoft 002A     __size_of_ui_adc_read 0030    __size_of_LCD_4bitsend 00A0  
        ?_LCD_initialize 0070           _adc_initialize 0268          __size_of_adc_on 0004  
                ___ftmul 05EF                  ___fttol 0549                  _adc_off 0233  
                ___lwdiv 0359                  ___lwmod 0315               ??___ftpack 0075  
             _initialize 0291               ??___lwtoft 007C         LCD_4bitsend@data 0071  
              _LCD_clear 023B     end_of_initialization 024E             _LCD_4bitsend 04A9  
 __end_of_adc_initialize 027A               ?_LCD_clear 0070               main@value_ 003D  
  __size_of_LCD_senddata 000B          ?_adc_initialize 0070        __size_of_LCD_goto 0017  
            ___ftmul@exp 0037           __end_of_adc_on 023B              ?_initialize 0070  
    start_initialization 024A            ??_LCD_command 0072             _LCD_senddata 025D  
          ??_LCD_putchar 0073                 ??_adc_on 0070        __size_of___ftpack 007B  
      __size_of___lwtoft 001B            __pcstackBANK0 0020              ??_LCD_clear 0073  
    __size_of_initialize 0018         ??_LCD_initialize 0073      __end_of_LCD_command 025D  
       ___lwdiv@dividend 0072                __ptext380 0233                __ptext381 02E5  
              __ptext390 0252                __ptext382 02C4                __ptext391 04A9  
              __ptext383 0242                __ptext392 0359                __ptext384 025D  
              __ptext393 0315                __ptext385 027A                __ptext394 05EF  
              __ptext386 0291                __ptext395 0549                __ptext387 0268  
              __ptext379 0237                __ptext396 02A9                __ptext388 0422  
              __ptext397 03A7                __ptext389 023B                __ptext398 0000  
               ?___ftmul 002D                 ?___fttol 0078                 ?_adc_off 0070  
               ?___lwdiv 0070                 ?___lwmod 0070      __end_of_LCD_putchar 024A  
              __pstrings 0003            ??_ui_adc_read 0072         ___lwdiv@quotient 0075  
               _LCD_goto 027A                main@F1159 004A              __stringbase 0008  
              main@total 0048              _LCD_command 0252         ??_adc_initialize 0070  
    __end_of_ui_adc_read 0315              _LCD_putchar 0242         __size_of___ftmul 00EE  
       __size_of___fttol 00A6         __size_of_adc_off 0004         __size_of___lwdiv 004E  
       __size_of___lwmod 0044             ??_initialize 0075                 ___ftpack 03A7  
               ___lwtoft 02A9          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 0123       __end_of_initialize 02A9     LCD_putstr@csz_string 0074  
             _LCD_putstr 02C4              _ui_adc_read 02E5         ___lwmod@dividend 0072  
              stringcode 0003          ___lwmod@divisor 0070          ___lwmod@counter 0075  
               stringdir 0003                 stringtab 0003            ?_LCD_4bitsend 0070  
         LCD_command@var 0072  
